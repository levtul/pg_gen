--
-- PostgreSQL database dump
--

-- Dumped from database version 13.6 (Ubuntu 13.6-1.pgdg18.04+1)
-- Dumped by pg_dump version 14.7 (Homebrew)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: ad_blacklist; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA ad_blacklist;


--
-- Name: bonus; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA bonus;


--
-- Name: filter; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA filter;


--
-- Name: human_resource; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA human_resource;


--
-- Name: maps; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA maps;


--
-- Name: new_year; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA new_year;


--
-- Name: runner; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA runner;


--
-- Name: valentine; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA valentine;


--
-- Name: pg_buffercache; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pg_buffercache WITH SCHEMA public;


--
-- Name: EXTENSION pg_buffercache; Type: COMMENT; Schema: -; Owner: -
--

COMMENT ON EXTENSION pg_buffercache IS 'examine the shared buffer cache';


--
-- Name: pg_funczon; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pg_funczon WITH SCHEMA public;


--
-- Name: EXTENSION pg_funczon; Type: COMMENT; Schema: -; Owner: -
--



--
-- Name: pg_stat_statements; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pg_stat_statements WITH SCHEMA public;


--
-- Name: EXTENSION pg_stat_statements; Type: COMMENT; Schema: -; Owner: -
--

COMMENT ON EXTENSION pg_stat_statements IS 'track planning and execution statistics of all SQL statements executed';


--
-- Name: pgstattuple; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pgstattuple WITH SCHEMA public;


--
-- Name: EXTENSION pgstattuple; Type: COMMENT; Schema: -; Owner: -
--

COMMENT ON EXTENSION pgstattuple IS 'show tuple-level statistics';


--
-- Name: uuid-ossp; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA public;


--
-- Name: EXTENSION "uuid-ossp"; Type: COMMENT; Schema: -; Owner: -
--

COMMENT ON EXTENSION "uuid-ossp" IS 'generate universally unique identifiers (UUIDs)';

--
-- Name: anonymize_employee_event(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.anonymize_employee_event() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    CASE NEW.event_type
        WHEN 1 THEN NEW.data = jsonb_set((NEW.data)::JSONB, '{data}'::TEXT[], (NEW.data -> 'data')::JSONB ||
                                                                              jsonb_object(
                                                                                      '{name, surname, patronymic, birthdate}',
                                                                                      ARRAY [
                                                                                          SUBSTRING(NEW.data -> 'data' ->> 'name', 0, 4),
                                                                                          SUBSTRING(NEW.data -> 'data' ->> 'surname', 0, 4),
                                                                                          SUBSTRING(NEW.data -> 'data' ->> 'patronymic', 0, 4),
                                                                                          '7777-07-07T00:00:00Z'
                                                                                          ]::TEXT[]), FALSE);
        WHEN 2 THEN NEW.data = jsonb_set((NEW.data)::JSONB, '{data}'::TEXT[], (NEW.data -> 'data')::JSONB ||
                                                                              jsonb_object(
                                                                                      '{name, surname, patronymic}',
                                                                                      ARRAY [
                                                                                          SUBSTRING(NEW.data -> 'data' ->> 'name', 0, 4),
                                                                                          SUBSTRING(NEW.data -> 'data' ->> 'surname', 0, 4),
                                                                                          SUBSTRING(NEW.data -> 'data' ->> 'patronymic', 0, 4)
                                                                                          ]::TEXT[]), FALSE);
        WHEN 3 THEN NEW.data = jsonb_set((NEW.data)::JSONB, '{data}'::TEXT[], (NEW.data -> 'data')::JSONB ||
                                                                              jsonb_object(
                                                                                      '{nameEn, surnameEn, patronymicEn, email}',
                                                                                      ARRAY [
                                                                                          SUBSTRING(NEW.data -> 'data' ->> 'nameEn', 0, 4),
                                                                                          SUBSTRING(NEW.data -> 'data' ->> 'surnameEn', 0, 4),
                                                                                          SUBSTRING(NEW.data -> 'data' ->> 'patronymicEn', 0, 4),
                                                                                          'email@ozon.ru'
                                                                                          ]::TEXT[]), FALSE);
        WHEN 4 THEN NEW.data = jsonb_set((NEW.data)::JSONB, '{data}'::TEXT[], (NEW.data -> 'data')::JSONB ||
                                                                              jsonb_object(
                                                                                      '{nameEn, surnameEn, patronymicEn}',
                                                                                      ARRAY [
                                                                                          SUBSTRING(NEW.data -> 'data' ->> 'nameEn', 0, 4),
                                                                                          SUBSTRING(NEW.data -> 'data' ->> 'surnameEn', 0, 4),
                                                                                          SUBSTRING(NEW.data -> 'data' ->> 'patronymicEn', 0, 4)
                                                                                          ]::TEXT[]), FALSE);
                    NEW.data = jsonb_set((NEW.data)::JSONB, '{prevData}'::TEXT[], (NEW.data -> 'prevData')::JSONB ||
                                                                                  jsonb_object(
                                                                                          '{nameEn, surnameEn, patronymicEn}',
                                                                                          ARRAY [
                                                                                              SUBSTRING(NEW.data -> 'prevData' ->> 'nameEn', 0, 4),
                                                                                              SUBSTRING(NEW.data -> 'prevData' ->> 'surnameEn', 0, 4),
                                                                                              SUBSTRING(NEW.data -> 'prevData' ->> 'patronymicEn', 0, 4)
                                                                                              ]::TEXT[]), FALSE);
        WHEN 5 THEN NEW.data = jsonb_set((NEW.data)::JSONB, '{data}'::TEXT[], (NEW.data -> 'data')::JSONB ||
                                                                              jsonb_object(
                                                                                      '{email}',
                                                                                      ARRAY [
                                                                                          'email@ozon.ru'
                                                                                          ]::TEXT[]), FALSE);
                    NEW.data = jsonb_set((NEW.data)::JSONB, '{prevData}'::TEXT[], (NEW.data -> 'prevData')::JSONB ||
                                                                                  jsonb_object(
                                                                                          '{email}',
                                                                                          ARRAY [
                                                                                              'email@ozon.ru'
                                                                                              ]::TEXT[]), FALSE);
        WHEN 7 THEN NEW.data = jsonb_set((NEW.data)::JSONB, '{data,person}'::TEXT[],
                                         (NEW.data -> 'data' -> 'person')::JSONB ||
                                         jsonb_object(
                                                 '{name, surname, patronymic, email}',
                                                 ARRAY [
                                                     SUBSTRING(NEW.data -> 'data' -> 'person' ->> 'name', 0, 4),
                                                     SUBSTRING(NEW.data -> 'data' -> 'person' ->> 'surname', 0, 4),
                                                     SUBSTRING(NEW.data -> 'data' -> 'person' ->> 'patronymic', 0, 4),
                                                     'email@ozon.ru'
                                                     ]::TEXT[]), FALSE);
                    NEW.data = jsonb_set((NEW.data)::JSONB, '{data,headPerson}'::TEXT[],
                                         (NEW.data -> 'data' -> 'headPerson')::JSONB ||
                                         jsonb_object(
                                                 '{name, surname, patronymic, email}',
                                                 ARRAY [
                                                     SUBSTRING(NEW.data -> 'data' -> 'headPerson' ->> 'name', 0, 4),
                                                     SUBSTRING(NEW.data -> 'data' -> 'headPerson' ->> 'surname', 0, 4),
                                                     SUBSTRING(NEW.data -> 'data' -> 'headPerson' ->> 'patronymic', 0, 4),
                                                     'email@ozon.ru'
                                                     ]::TEXT[]), FALSE);
        WHEN 8 THEN NEW.data = jsonb_set((NEW.data)::JSONB, '{data,headPerson}'::TEXT[],
                                         (NEW.data -> 'data' -> 'headPerson')::JSONB ||
                                         jsonb_object(
                                                 '{name, surname, patronymic, email}',
                                                 ARRAY [
                                                     SUBSTRING(NEW.data -> 'data' -> 'headPerson' ->> 'name', 0, 4),
                                                     SUBSTRING(NEW.data -> 'data' -> 'headPerson' ->> 'surname', 0, 4),
                                                     SUBSTRING(NEW.data -> 'data' -> 'headPerson' ->> 'patronymic', 0, 4),
                                                     'email@ozon.ru'
                                                     ]::TEXT[]), FALSE);
        WHEN 9, 10 THEN NEW.data = jsonb_set((NEW.data)::JSONB, '{data}'::TEXT[],
                                             (NEW.data -> 'data')::JSONB ||
                                             jsonb_object(
                                                     '{email}',
                                                     ARRAY [
                                                         'email@ozon.ru'
                                                         ]::TEXT[]), FALSE);
                        NEW.data = jsonb_set((NEW.data)::JSONB, '{prevData}'::TEXT[],
                                             (NEW.data -> 'prevData')::JSONB ||
                                             jsonb_object(
                                                     '{email}',
                                                     ARRAY [
                                                         'email@ozon.ru'
                                                         ]::TEXT[]), FALSE);
                        IF NEW.data ->> 'person' != '{}' THEN
                            NEW.data = jsonb_set((NEW.data)::JSONB, '{person}'::TEXT[],
                                                 (NEW.data -> 'person')::JSONB ||
                                                 jsonb_object(
                                                         '{name, surname, patronymic, email, birthdate, nameEn, surnameEn, patronymicEn}',
                                                         ARRAY [
                                                             SUBSTRING(NEW.data -> 'person' ->> 'name', 0, 4),
                                                             SUBSTRING(NEW.data -> 'person' ->> 'surname', 0, 4),
                                                             SUBSTRING(NEW.data -> 'person' ->> 'patronymic', 0, 4),
                                                             'email@ozon.ru',
                                                             '7777-07-07T00:00:00Z',
                                                             SUBSTRING(NEW.data -> 'person' ->> 'nameEn', 0, 4),
                                                             SUBSTRING(NEW.data -> 'person' ->> 'surnameEn', 0, 4),
                                                             SUBSTRING(NEW.data -> 'person' ->> 'patronymicEn', 0, 4)
                                                             ]::TEXT[]), FALSE);
                        END IF;
        WHEN 17, 18, 23, 34, 35
            THEN NEW.data = jsonb_set((NEW.data)::JSONB, '{data}'::TEXT[], (NEW.data -> 'data')::JSONB ||
                                                                           jsonb_object(
                                                                                   '{email}',
                                                                                   ARRAY [
                                                                                       'email@ozon.ru'
                                                                                       ]::TEXT[]), FALSE);
        WHEN 19 THEN NEW.data = jsonb_set((NEW.data)::JSONB, '{data}'::TEXT[], (NEW.data -> 'data')::JSONB ||
                                                                               jsonb_object(
                                                                                       '{slackName}',
                                                                                       ARRAY [
                                                                                           SUBSTRING(NEW.data -> 'data' ->> 'slackName', 0, 4)
                                                                                           ]::TEXT[]), FALSE);
                     IF NEW.data ->> 'person' != '{}' THEN
                         NEW.data = jsonb_set((NEW.data)::JSONB, '{person}'::TEXT[],
                                              (NEW.data -> 'person')::JSONB ||
                                              jsonb_object(
                                                      '{name, surname, patronymic, email, birthdate, nameEn, surnameEn, patronymicEn}',
                                                      ARRAY [
                                                          SUBSTRING(NEW.data -> 'person' ->> 'name', 0, 4),
                                                          SUBSTRING(NEW.data -> 'person' ->> 'surname', 0, 4),
                                                          SUBSTRING(NEW.data -> 'person' ->> 'patronymic', 0, 4),
                                                          'email@ozon.ru',
                                                          '7777-07-07T00:00:00Z',
                                                          SUBSTRING(NEW.data -> 'person' ->> 'nameEn', 0, 4),
                                                          SUBSTRING(NEW.data -> 'person' ->> 'surnameEn', 0, 4),
                                                          SUBSTRING(NEW.data -> 'person' ->> 'patronymicEn', 0, 4)
                                                          ]::TEXT[]), FALSE);
                     END IF;
        WHEN 11, 12, 13, 14, 15, 16, 20, 21, 22, 26, 27, 29, 30, 31, 32, 33, 36, 37, 38, 39
            THEN IF NEW.data ->> 'person' != '{}' THEN
                NEW.data = jsonb_set((NEW.data)::JSONB, '{person}'::TEXT[],
                                     (NEW.data -> 'person')::JSONB ||
                                     jsonb_object(
                                             '{name, surname, patronymic, email, birthdate, nameEn, surnameEn, patronymicEn}',
                                             ARRAY [
                                                 SUBSTRING(NEW.data -> 'person' ->> 'name', 0, 4),
                                                 SUBSTRING(NEW.data -> 'person' ->> 'surname', 0, 4),
                                                 SUBSTRING(NEW.data -> 'person' ->> 'patronymic', 0, 4),
                                                 'email@ozon.ru',
                                                 '7777-07-07T00:00:00Z',
                                                 SUBSTRING(NEW.data -> 'person' ->> 'nameEn', 0, 4),
                                                 SUBSTRING(NEW.data -> 'person' ->> 'surnameEn', 0, 4),
                                                 SUBSTRING(NEW.data -> 'person' ->> 'patronymicEn', 0, 4)
                                                 ]::TEXT[]), FALSE);
            END IF;
        ELSE NEW = NEW;
        END CASE;

    RETURN NEW;
END;
$$;


--
-- Name: disallow_event_ddl_grant(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.disallow_event_ddl_grant() RETURNS event_trigger
    LANGUAGE plpgsql
    AS $$
declare
    current_owner text;
    is_superuser bool;
begin
    is_superuser := (select usesuper from pg_catalog.pg_user where usename = current_user);
    current_owner := (
        select
            pg_catalog.pg_get_userbyid(d.datdba)
        from pg_catalog.pg_database d where d.datname = current_database());
    if not is_superuser and (current_user = current_owner or pg_has_role(current_owner, 'member')) then
        if tg_tag = 'GRANT' then
            raise exception 'GRANT is forbidden';
        else
           raise notice 'event trigger %s pass % for %s', tg_event, tg_tag, current_user;
        end if;
    end if;
end;
$$;


--
-- Name: trigger_set_timestamp(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.trigger_set_timestamp() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  NEW.updated_at = NOW();
  RETURN NEW;
END;
$$;


--
-- Name: ensure_task(integer, timestamp with time zone); Type: FUNCTION; Schema: runner; Owner: -
--

CREATE FUNCTION runner.ensure_task(in_schedule_id integer, in_scheduled_at timestamp with time zone) RETURNS void
    LANGUAGE plpgsql
    AS $$
  begin
    if not exists(select id from runner.task where schedule_id = in_schedule_id and scheduled_at = in_scheduled_at) then
      insert into runner.task(schedule_id, scheduled_at) values (in_schedule_id, in_scheduled_at);
    end if;
  end;
$$;


--
-- Name: get_schedules(text); Type: FUNCTION; Schema: runner; Owner: -
--

CREATE FUNCTION runner.get_schedules(in_environment text) RETURNS TABLE(out_id integer, out_at text)
    LANGUAGE plpgsql
    AS $$
  begin
    return query (
    select
      id, at
    from
      runner.schedule
      where enabled and environment = in_environment::runner_environment and database = current_database()
    );
  end;
$$;


--
-- Name: get_tasks(text); Type: FUNCTION; Schema: runner; Owner: -
--

CREATE FUNCTION runner.get_tasks(in_environment text) RETURNS TABLE(out_id bigint, out_task text, out_params text)
    LANGUAGE plpgsql
    AS $$
  begin
    return query (
      select
        t.id,
        s.task::text,
        s.task_params::text
      from runner.task t
      inner join runner.schedule s on s.id = t.schedule_id
      where
        s.enabled
        and s.environment = in_environment::runner_environment
        and s.database = current_database()
        and current_timestamp >= t.scheduled_at
        and t.processed_at is null);
  end;
$$;


--
-- Name: process_audit(); Type: FUNCTION; Schema: runner; Owner: -
--

CREATE FUNCTION runner.process_audit() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
begin
  if (tg_op = 'INSERT') then
    insert into runner.schedule_audit(current)
      values (to_jsonb(new));
  elsif tg_op = 'UPDATE' then
    insert into runner.schedule_audit(prev, current)
      values (to_jsonb(new), to_json(old));
  elsif tg_op = 'DELETE' then
    insert into runner.schedule_audit(prev)
      values (to_json(old));
  else
    raise exception 'unsupported';
  end if;
  return new;
end;
$$;


--
-- Name: schedule_validate(); Type: FUNCTION; Schema: runner; Owner: -
--

CREATE FUNCTION runner.schedule_validate() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
  begin
      return new;
  end;
$$;


--
-- Name: set_processed(bigint); Type: FUNCTION; Schema: runner; Owner: -
--

CREATE FUNCTION runner.set_processed(in_id bigint) RETURNS void
    LANGUAGE plpgsql
    AS $$
  begin
    update runner.task set processed_at = current_timestamp where id = in_id;
  end;
$$;


SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: props; Type: TABLE; Schema: ad_blacklist; Owner: -
--

CREATE TABLE ad_blacklist.props (
    prop_name character varying(255) NOT NULL,
    ad_name character varying(255)
);


--
-- Name: users; Type: TABLE; Schema: ad_blacklist; Owner: -
--

CREATE TABLE ad_blacklist.users (
    login character varying(255) NOT NULL,
    disable_sync text NOT NULL
);


--
-- Name: mail_result; Type: TABLE; Schema: bonus; Owner: -
--

CREATE TABLE bonus.mail_result (
    id integer NOT NULL,
    owner uuid NOT NULL,
    result bigint NOT NULL,
    delivery_status smallint DEFAULT 0 NOT NULL,
    sent_status smallint DEFAULT 0 NOT NULL,
    error text DEFAULT ''::text NOT NULL,
    sent_at timestamp without time zone DEFAULT now() NOT NULL
);


--
-- Name: mail_result_id_seq; Type: SEQUENCE; Schema: bonus; Owner: -
--

ALTER TABLE bonus.mail_result ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME bonus.mail_result_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: promo_code; Type: TABLE; Schema: bonus; Owner: -
--

CREATE TABLE bonus.promo_code (
    id uuid NOT NULL,
    name text NOT NULL,
    value text NOT NULL,
    owner uuid
);


--
-- Name: promo_code_owner; Type: TABLE; Schema: bonus; Owner: -
--

CREATE TABLE bonus.promo_code_owner (
    id uuid NOT NULL,
    email text NOT NULL,
    name text NOT NULL
);


--
-- Name: persons; Type: TABLE; Schema: filter; Owner: -
--

CREATE TABLE filter.persons (
    id integer NOT NULL,
    person_id integer NOT NULL,
    first_day date NOT NULL,
    filter_value integer[] NOT NULL,
    employee_guid uuid
);


--
-- Name: persons_id_seq; Type: SEQUENCE; Schema: filter; Owner: -
--

ALTER TABLE filter.persons ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME filter.persons_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: values; Type: TABLE; Schema: filter; Owner: -
--

CREATE TABLE filter."values" (
    id integer NOT NULL,
    title text NOT NULL,
    filter_name text NOT NULL,
    filter_value bigint NOT NULL
);


--
-- Name: values_id_seq; Type: SEQUENCE; Schema: filter; Owner: -
--

ALTER TABLE filter."values" ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME filter.values_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: company; Type: TABLE; Schema: human_resource; Owner: -
--

CREATE TABLE human_resource.company (
    id integer NOT NULL,
    title text NOT NULL,
    prefix text NOT NULL
);


--
-- Name: company_id_seq; Type: SEQUENCE; Schema: human_resource; Owner: -
--

ALTER TABLE human_resource.company ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME human_resource.company_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: employee_events; Type: TABLE; Schema: human_resource; Owner: -
--

CREATE TABLE human_resource.employee_events (
    id integer NOT NULL,
    person_id integer,
    event_type smallint NOT NULL,
    data json NOT NULL,
    received_at timestamp with time zone DEFAULT now() NOT NULL,
    processed_at timestamp with time zone
);


--
-- Name: COLUMN employee_events.event_type; Type: COMMENT; Schema: human_resource; Owner: -
--

COMMENT ON COLUMN human_resource.employee_events.event_type IS ' 0 - Unknown
     1 - PersonCreated
     2 - PersonFullNameChanged
     3 - PersonAccountCreated
     4 - PersonAccountFullNameChanged
     5 - PersonAccountLoginChanged
     6 - PersonAccountWorkPhoneChanged
     7 - EmployeeHeadChanged
     8 - EmployeeOrgChanged
     9 - EmployeeSubdivisionChanged
     10 - EmployeeCostCenterChanged
     11 - EmployeeCompanyChanged
     12 - EmployeeStatusChanged
     13 - EmployeeVacationDaysChanged
     14 - EmployeeGradeChanged
     15 - EmployeeHired
     16 - EmployeeDismissDateChanged
     17 - EmployeeFired
     18 - PersonAllEmployeesFired
     19 - PersonAccountSlackChanged
     20 - EmployeeIsManagerChanged
     21 - EmployeePositionChanged
     22 - EmployeeGAChanged
     23 - PersonAccountEmailChanged
     24 - PersonPhotoChanged
     25 - PersonMobilePhoneChanged
     26 - EmployeeBonusChanged';


--
-- Name: employees; Type: TABLE; Schema: human_resource; Owner: -
--

CREATE TABLE human_resource.employees (
    person_id integer NOT NULL, -- type:id
    guid uuid NOT NULL,
    position_guid uuid DEFAULT public.uuid_nil() NOT NULL,
    "position" text DEFAULT ''::text NOT NULL, -- oneof:['pos1', 'pos2']
    position_alias text DEFAULT ''::text NOT NULL,
    org_structure_guid uuid DEFAULT public.uuid_nil() NOT NULL,
    subdivision_guid uuid DEFAULT public.uuid_nil() NOT NULL,
    is_active boolean DEFAULT true NOT NULL,
    is_main boolean NOT NULL,
    is_head boolean NOT NULL,
    head_position_guid uuid DEFAULT public.uuid_nil() NOT NULL,
    head_person_id integer DEFAULT 0 NOT NULL,
    first_day date,
    company_prefix text DEFAULT ''::text NOT NULL,
    employee_number text DEFAULT ''::text NOT NULL,
    cost_center_guid uuid DEFAULT public.uuid_nil() NOT NULL,
    cost_center_title text DEFAULT ''::text NOT NULL,
    bonus_percent numeric(15,2) DEFAULT 0 NOT NULL,
    bonus_period text DEFAULT ''::text NOT NULL,
    contract_type smallint DEFAULT 0 NOT NULL,
    probation_period smallint DEFAULT 0 NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    employee_status_id smallint DEFAULT 1 NOT NULL,
    dismiss_date timestamp with time zone,
    grade smallint DEFAULT 0 NOT NULL,
    position_level_id smallint DEFAULT 0 NOT NULL,
    position_family_id smallint DEFAULT 0 NOT NULL,
    probation_last_day date,
    for_staff boolean DEFAULT false NOT NULL,
    emp_city text DEFAULT ''::text,
    emp_street text DEFAULT ''::text,
    stay_alive boolean DEFAULT true,
    work_time_rate double precision DEFAULT 0,
    ga_guid uuid DEFAULT public.uuid_nil(),
    kpi_group_id uuid DEFAULT public.uuid_nil(),
    emp_type text DEFAULT ''::text,
    country text DEFAULT ''::text,
    region text DEFAULT ''::text,
    dms_number text -- oneof:['ДМС1', 'ДМС2']
);


--
-- Name: ga_types; Type: TABLE; Schema: human_resource; Owner: -
--

CREATE TABLE human_resource.ga_types (
    guid uuid NOT NULL,
    title text DEFAULT ''::text NOT NULL
);


--
-- Name: org_structures; Type: TABLE; Schema: human_resource; Owner: -
--

CREATE TABLE human_resource.org_structures (
    id uuid NOT NULL,
    name text NOT NULL,
    parent_id uuid DEFAULT public.uuid_nil() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    company_id character varying(256) DEFAULT ''::character varying NOT NULL,
    bp_id uuid DEFAULT public.uuid_nil() NOT NULL,
    affiliation character varying(5) DEFAULT ''::character varying NOT NULL,
    vertical_ids uuid[] NOT NULL,
    version integer DEFAULT 1 NOT NULL,
    is_deleted boolean DEFAULT false NOT NULL,
    function_guid uuid DEFAULT public.uuid_nil(),
    staffer_guid uuid DEFAULT public.uuid_nil() NOT NULL,
    legal_partner_guid uuid DEFAULT public.uuid_nil() NOT NULL,
    num_id bigint DEFAULT (0)::bigint,
    parent_num_id bigint DEFAULT (0)::bigint,
    CONSTRAINT num_id_not_null CHECK ((num_id IS NOT NULL)),
    CONSTRAINT parent_num_id_not_null CHECK ((parent_num_id IS NOT NULL))
);


--
-- Name: org_structures_events; Type: TABLE; Schema: human_resource; Owner: -
--

CREATE TABLE human_resource.org_structures_events (
    id integer NOT NULL,
    change_id integer NOT NULL,
    event_type smallint NOT NULL,
    data json NOT NULL,
    received_at timestamp with time zone DEFAULT now() NOT NULL,
    processed_at timestamp with time zone
);


--
-- Name: COLUMN org_structures_events.event_type; Type: COMMENT; Schema: human_resource; Owner: -
--

COMMENT ON COLUMN human_resource.org_structures_events.event_type IS ' 0 - OrgEventUnknown
     1 - OrgEventCreated
     2 - OrgEventDeleted
     3 - OrgEventNameChanged
     4 - OrgEventHRBPChanged
     5 - OrgEventParentChanged
     6 - OrgEventAffiliationChanged
     7 - OrgEventFunctionChanged
     8 - OrgEventStafferChanged
     9 - EventLegalPartnerChanged';


--
-- Name: person_accounts_changes_raw; Type: TABLE; Schema: human_resource; Owner: -
--

CREATE TABLE human_resource.person_accounts_changes_raw (
    id integer NOT NULL,
    sid text NOT NULL,
    data json NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL
);


--
-- Name: person_accounts_changes_raw_id_seq; Type: SEQUENCE; Schema: human_resource; Owner: -
--

ALTER TABLE human_resource.person_accounts_changes_raw ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME human_resource.person_accounts_changes_raw_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: person_greeting_message; Type: TABLE; Schema: human_resource; Owner: -
--

CREATE TABLE human_resource.person_greeting_message (
    person_id integer NOT NULL,
    previous_greeting date DEFAULT CURRENT_DATE NOT NULL,
    greeting_type integer DEFAULT 0 NOT NULL
);


--
-- Name: person_orgstructure_settings; Type: TABLE; Schema: human_resource; Owner: -
--

CREATE TABLE human_resource.person_orgstructure_settings (
    login text,
    last_updated timestamp without time zone
);


--
-- Name: person_orgstructure_settings_duplicates; Type: TABLE; Schema: human_resource; Owner: -
--

CREATE TABLE human_resource.person_orgstructure_settings_duplicates (
    login text NOT NULL,
    org_guid uuid NOT NULL,
    "position" text DEFAULT ''::text NOT NULL,
    show_in_profile boolean DEFAULT false NOT NULL
);


--
-- Name: person_orgstructure_settings_orgs; Type: TABLE; Schema: human_resource; Owner: -
--

CREATE TABLE human_resource.person_orgstructure_settings_orgs (
    login text NOT NULL,
    org_guid uuid NOT NULL,
    "position" text NOT NULL,
    displayed_manager_login text DEFAULT ''::text NOT NULL,
    displayed_org_guid uuid DEFAULT public.uuid_nil() NOT NULL,
    is_position_hidden boolean DEFAULT false NOT NULL,
    is_department_hidden boolean DEFAULT false NOT NULL,
    is_legal_hidden boolean DEFAULT false NOT NULL,
    is_hrbp_hidden boolean DEFAULT false NOT NULL
);


--
-- Name: persons; Type: TABLE; Schema: human_resource; Owner: -
--

CREATE TABLE human_resource.persons (
    id integer NOT NULL,
    sid text DEFAULT ''::text NOT NULL,
    login text DEFAULT ''::text NOT NULL,
    surname text DEFAULT ''::text NOT NULL,
    name text DEFAULT ''::text NOT NULL,
    patronymic text DEFAULT ''::text NOT NULL,
    surname_en text DEFAULT ''::text NOT NULL,
    name_en text DEFAULT ''::text NOT NULL,
    patronymic_en text DEFAULT ''::text NOT NULL,
    birthdate date,
    city text DEFAULT ''::text NOT NULL,
    street text DEFAULT ''::text NOT NULL,
    photo_url text DEFAULT ''::text NOT NULL,
    work_phone text DEFAULT ''::text NOT NULL,
    email text DEFAULT ''::text NOT NULL,
    slack_id text DEFAULT ''::text NOT NULL,
    slack_name text DEFAULT ''::text NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_by integer
);


--
-- Name: persons_id_seq; Type: SEQUENCE; Schema: human_resource; Owner: -
--

ALTER TABLE human_resource.persons ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME human_resource.persons_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: work_info; Type: TABLE; Schema: human_resource; Owner: -
--

CREATE TABLE human_resource.work_info (
    person_id integer NOT NULL,
    info text DEFAULT ''::text,
    links jsonb DEFAULT '{}'::jsonb
);


--
-- Name: booking_orgs; Type: TABLE; Schema: maps; Owner: -
--

CREATE TABLE maps.booking_orgs (
    id smallint NOT NULL,
    org uuid NOT NULL
);


--
-- Name: booking_orgs_id_seq; Type: SEQUENCE; Schema: maps; Owner: -
--

ALTER TABLE maps.booking_orgs ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME maps.booking_orgs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: department_quotas; Type: TABLE; Schema: maps; Owner: -
--

CREATE TABLE maps.department_quotas (
    id integer NOT NULL,
    department_guid uuid NOT NULL,
    quota smallint NOT NULL,
    is_general boolean DEFAULT false
);


--
-- Name: department_quotas_id_seq; Type: SEQUENCE; Schema: maps; Owner: -
--

ALTER TABLE maps.department_quotas ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME maps.department_quotas_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: department_workplaces; Type: TABLE; Schema: maps; Owner: -
--

CREATE TABLE maps.department_workplaces (
    id integer NOT NULL,
    department_guid uuid NOT NULL,
    workplace_id text NOT NULL,
    location_id integer NOT NULL
);


--
-- Name: department_workplaces_id_seq; Type: SEQUENCE; Schema: maps; Owner: -
--

ALTER TABLE maps.department_workplaces ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME maps.department_workplaces_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: hierarchy; Type: TABLE; Schema: maps; Owner: -
--

CREATE TABLE maps.hierarchy (
    id smallint NOT NULL,
    parent_id smallint,
    title text NOT NULL,
    description text NOT NULL,
    map_id smallint
);


--
-- Name: hierarchy_id_seq; Type: SEQUENCE; Schema: maps; Owner: -
--

ALTER TABLE maps.hierarchy ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME maps.hierarchy_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: maps; Type: TABLE; Schema: maps; Owner: -
--

CREATE TABLE maps.maps (
    id integer NOT NULL,
    hierarchy_id integer,
    current_hash character(32),
    old_hash character(32)
);


--
-- Name: maps_id_seq; Type: SEQUENCE; Schema: maps; Owner: -
--

CREATE SEQUENCE maps.maps_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: maps_id_seq; Type: SEQUENCE OWNED BY; Schema: maps; Owner: -
--

ALTER SEQUENCE maps.maps_id_seq OWNED BY maps.maps.id;


--
-- Name: person_schedule_bookings; Type: TABLE; Schema: maps; Owner: -
--

CREATE TABLE maps.person_schedule_bookings (
    id integer NOT NULL,
    person_id integer NOT NULL,
    date timestamp with time zone NOT NULL,
    workplace_id text NOT NULL,
    location_id integer NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    is_deleted boolean DEFAULT false NOT NULL
);


--
-- Name: person_schedule_bookings_id_seq; Type: SEQUENCE; Schema: maps; Owner: -
--

ALTER TABLE maps.person_schedule_bookings ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME maps.person_schedule_bookings_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: person_schedules; Type: TABLE; Schema: maps; Owner: -
--

CREATE TABLE maps.person_schedules (
    person_id integer NOT NULL,
    in_office_days smallint,
    created_by integer DEFAULT 0 NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL
);


--
-- Name: user_workplaces; Type: TABLE; Schema: maps; Owner: -
--

CREATE TABLE maps.user_workplaces (
    id integer NOT NULL,
    login character varying(256),
    workplace_id character varying(256),
    location_id integer,
    is_quota boolean DEFAULT false NOT NULL
);


--
-- Name: user_workplaces_id_seq; Type: SEQUENCE; Schema: maps; Owner: -
--

ALTER TABLE maps.user_workplaces ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME maps.user_workplaces_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: workplace_events; Type: TABLE; Schema: maps; Owner: -
--

CREATE TABLE maps.workplace_events (
    person_id integer NOT NULL,
    login text,
    workplace text,
    event_type integer,
    version integer DEFAULT 0,
    is_temporary boolean DEFAULT false,
    CONSTRAINT event_type_not_null CHECK ((event_type IS NOT NULL)),
    CONSTRAINT is_temporary_not_null CHECK ((is_temporary IS NOT NULL)),
    CONSTRAINT login_not_null CHECK ((login IS NOT NULL)),
    CONSTRAINT person_id_not_null CHECK ((person_id IS NOT NULL)),
    CONSTRAINT version_not_null CHECK ((version IS NOT NULL)),
    CONSTRAINT workplace_not_null CHECK ((workplace IS NOT NULL))
);


--
-- Name: tree_toys; Type: TABLE; Schema: new_year; Owner: -
--

CREATE TABLE new_year.tree_toys (
    person_id integer NOT NULL,
    toy_owner integer NOT NULL,
    toy_id integer NOT NULL,
    update_at timestamp with time zone DEFAULT now() NOT NULL
);


--
-- Name: trees; Type: TABLE; Schema: new_year; Owner: -
--

CREATE TABLE new_year.trees (
    person_id integer NOT NULL,
    self_limit integer DEFAULT 10 NOT NULL,
    colleagues_limit integer DEFAULT 5 NOT NULL
);


--
-- Name: achievements; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.achievements (
    id integer NOT NULL,
    name character varying(256) NOT NULL,
    image character varying(256) NOT NULL,
    description character varying(512) DEFAULT ''::character varying NOT NULL,
    create_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    visibility boolean DEFAULT true NOT NULL,
    author integer NOT NULL,
    create_by integer NOT NULL
);


--
-- Name: achievements_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.achievements_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: achievements_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.achievements_id_seq OWNED BY public.achievements.id;


--
-- Name: achievements_owners; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.achievements_owners (
    id integer NOT NULL,
    profile_id integer NOT NULL,
    achievement_id integer NOT NULL,
    create_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


--
-- Name: achievements_owners_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.achievements_owners_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: achievements_owners_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.achievements_owners_id_seq OWNED BY public.achievements_owners.id;


--
-- Name: assign_achievements; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.assign_achievements (
    profile_id integer NOT NULL,
    achievement_id integer NOT NULL,
    who_appropriated integer NOT NULL,
    create_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    pin_order integer DEFAULT 0,
    CONSTRAINT assign_achievements_pin_order_not_null CHECK ((pin_order IS NOT NULL))
);


--
-- Name: cars; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.cars (
    id bigint NOT NULL,
    mark character varying(256) DEFAULT ''::character varying NOT NULL,
    model character varying(256) DEFAULT ''::character varying NOT NULL,
    number character varying(256) DEFAULT ''::character varying NOT NULL,
    login character varying(256),
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    profile_id integer NOT NULL
);


--
-- Name: cars_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.cars_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: cars_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.cars_id_seq OWNED BY public.cars.id;


--
-- Name: change_events; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.change_events (
    id integer NOT NULL,
    person_id integer NOT NULL,
    version integer DEFAULT 0 NOT NULL,
    data jsonb NOT NULL,
    archived boolean DEFAULT false NOT NULL,
    type text NOT NULL,
    update_date timestamp with time zone DEFAULT now() NOT NULL
);


--
-- Name: change_events_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.change_events ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.change_events_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: change_log; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.change_log (
    id integer NOT NULL,
    table_name text NOT NULL,
    data jsonb,
    login text NOT NULL,
    "timestamp" timestamp without time zone DEFAULT now() NOT NULL
);


--
-- Name: change_log_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.change_log ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.change_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: company; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.company (
    id character varying(256) NOT NULL,
    title character varying(256) NOT NULL
);


--
-- Name: company_color; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.company_color (
    company_id character varying(10) NOT NULL,
    hex_color character varying(7) NOT NULL
);


--
-- Name: contacts; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.contacts (
    id integer NOT NULL,
    phone character varying(256),
    email character varying(256),
    telegram character varying(256),
    skype character varying(256),
    slack character varying(256),
    profile_id integer NOT NULL,
    work_phone character varying(256) DEFAULT NULL::character varying,
    slack_name character varying(256) DEFAULT NULL::character varying,
    workplace_id text,
    workplace_name text,
    workplace_ignore boolean DEFAULT false NOT NULL,
    github character varying(256),
    hide_phone boolean DEFAULT false NOT NULL,
    mm_id text DEFAULT ''::text NOT NULL,
    behance text DEFAULT ''::text,
    tik_tok text DEFAULT ''::text,
    you_tube text DEFAULT ''::text,
    instagram text DEFAULT ''::text,
    facebook text DEFAULT ''::text,
    vk text DEFAULT ''::text,
    phone_code text,
    phone_country text,
    phone_code_id integer
);


--
-- Name: contacts_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.contacts_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: contacts_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.contacts_id_seq OWNED BY public.contacts.id;


--
-- Name: countries; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.countries (
    id integer NOT NULL,
    name text NOT NULL
);


--
-- Name: countries_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.countries ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.countries_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: file_changes; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.file_changes (
    id integer NOT NULL,
    name text NOT NULL,
    type text NOT NULL,
    created_by text NOT NULL,
    uploaded_at timestamp without time zone DEFAULT now()
);


--
-- Name: file_changes_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.file_changes ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.file_changes_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: goose_db_version; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.goose_db_version (
    id integer NOT NULL,
    version_id bigint NOT NULL,
    is_applied boolean NOT NULL,
    tstamp timestamp without time zone DEFAULT now()
);


--
-- Name: goose_db_version_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.goose_db_version_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: goose_db_version_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.goose_db_version_id_seq OWNED BY public.goose_db_version.id;


--
-- Name: goose_db_versions; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.goose_db_versions (
    id integer NOT NULL,
    version_id bigint NOT NULL,
    is_applied boolean NOT NULL,
    tstamp timestamp without time zone DEFAULT now()
);


--
-- Name: goose_db_versions_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.goose_db_versions_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: goose_db_versions_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.goose_db_versions_id_seq OWNED BY public.goose_db_versions.id;


--
-- Name: hrbp_org_structures; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.hrbp_org_structures (
    top_org_structure_id character varying(256) NOT NULL,
    profile_id integer NOT NULL
);


--
-- Name: info; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.info (
    profile_id integer,
    birthday character varying(256),
    tshirt_size character varying(256),
    married character varying(256),
    children character varying(256),
    hobby text,
    previously_worked text,
    education text,
    about text,
    employment_form character varying(256),
    date_of_receipted character varying(256),
    birthday_status character varying(256) DEFAULT NULL::character varying
);


--
-- Name: jira_update_tasks; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.jira_update_tasks (
    id integer NOT NULL,
    username text NOT NULL,
    data json NOT NULL,
    attempts integer DEFAULT 0 NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    sent_at timestamp with time zone,
    error text DEFAULT ''::text
);


--
-- Name: jira_backup_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.jira_update_tasks ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.jira_backup_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: languages_assigned; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.languages_assigned (
    person_id integer NOT NULL,
    lan_one integer,
    lan_two integer,
    lan_three integer
);


--
-- Name: languages_list; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.languages_list (
    id integer NOT NULL,
    name character varying(128) NOT NULL,
    picture character varying(256) NOT NULL
);


--
-- Name: languages_list_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.languages_list_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: languages_list_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.languages_list_id_seq OWNED BY public.languages_list.id;


--
-- Name: leader_statuses; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.leader_statuses (
    id integer NOT NULL,
    label text NOT NULL,
    description text,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


--
-- Name: leader_statuses_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.leader_statuses_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: leader_statuses_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.leader_statuses_id_seq OWNED BY public.leader_statuses.id;


--
-- Name: leader_statuses_owners; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.leader_statuses_owners (
    id integer NOT NULL,
    profile_id integer NOT NULL,
    leader_status integer NOT NULL,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


--
-- Name: leader_statuses_owners_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.leader_statuses_owners_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: leader_statuses_owners_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.leader_statuses_owners_id_seq OWNED BY public.leader_statuses_owners.id;


--
-- Name: locations; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.locations (
    id integer NOT NULL,
    city character varying(256),
    country character varying(256),
    address text,
    floor character varying(256),
    description text,
    group_area character varying(256) DEFAULT ''::character varying NOT NULL,
    support_manager integer DEFAULT 0 NOT NULL
);


--
-- Name: locations_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.locations_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: locations_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.locations_id_seq OWNED BY public.locations.id;


--
-- Name: mail_tasks; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.mail_tasks (
    id integer NOT NULL,
    type text NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    send_time timestamp with time zone DEFAULT now() NOT NULL,
    status smallint DEFAULT 0 NOT NULL,
    recipient_id integer NOT NULL,
    data jsonb NOT NULL,
    commsid text,
    error text
);


--
-- Name: mail_tasks_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.mail_tasks ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.mail_tasks_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: maps_events; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.maps_events (
    id integer NOT NULL,
    person_id integer NOT NULL,
    event_type text NOT NULL,
    data jsonb DEFAULT '{}'::jsonb NOT NULL,
    created_date timestamp with time zone DEFAULT now() NOT NULL,
    sent_date timestamp with time zone
);


--
-- Name: maps_events_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.maps_events ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.maps_events_id_seq
    START WITH 10000
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: org_subscriptions; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.org_subscriptions (
    person_id integer NOT NULL,
    subscription uuid NOT NULL
);


--
-- Name: phone_codes; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.phone_codes (
    id integer NOT NULL,
    country integer,
    code text NOT NULL,
    min_length smallint NOT NULL,
    max_length smallint NOT NULL
);


--
-- Name: phone_codes_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.phone_codes ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.phone_codes_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: phone_events; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.phone_events (
    person_id integer NOT NULL,
    last_change timestamp with time zone DEFAULT now() NOT NULL,
    phone text NOT NULL,
    version integer DEFAULT 0 NOT NULL,
    is_ldap_sent boolean DEFAULT false NOT NULL,
    is_kdp_sent boolean DEFAULT false NOT NULL
);


--
-- Name: photo_events; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.photo_events (
    person_id integer NOT NULL,
    last_change timestamp with time zone DEFAULT now() NOT NULL,
    photo_url text NOT NULL,
    updated_by integer NOT NULL,
    version integer DEFAULT 0 NOT NULL,
    sent_to_kafka boolean DEFAULT false NOT NULL
);


--
-- Name: portal_events; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.portal_events (
    id integer NOT NULL,
    person_id integer NOT NULL,
    event_type text NOT NULL,
    data jsonb DEFAULT '{}'::jsonb NOT NULL,
    created_date timestamp with time zone DEFAULT now() NOT NULL,
    sent_date timestamp with time zone
);


--
-- Name: portal_events_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.portal_events ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.portal_events_id_seq
    START WITH 1000
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: position_family; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.position_family (
    id integer NOT NULL,
    title text NOT NULL,
    description text NOT NULL
);


--
-- Name: position_family_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.position_family_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: position_family_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.position_family_id_seq OWNED BY public.position_family.id;


--
-- Name: position_level; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.position_level (
    id integer NOT NULL,
    title text NOT NULL,
    description text NOT NULL,
    type_id integer
);


--
-- Name: position_level_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.position_level_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: position_level_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.position_level_id_seq OWNED BY public.position_level.id;


--
-- Name: position_level_type; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.position_level_type (
    id integer NOT NULL,
    title text NOT NULL,
    description text NOT NULL
);


--
-- Name: position_level_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.position_level_type_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: position_level_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.position_level_type_id_seq OWNED BY public.position_level_type.id;


--
-- Name: remote; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.remote (
    person_id integer NOT NULL,
    created_at timestamp with time zone DEFAULT now(),
    created_by text DEFAULT ''::text,
    CONSTRAINT created_at_not_null CHECK ((created_at IS NOT NULL)),
    CONSTRAINT created_by_not_null CHECK ((created_by IS NOT NULL))
);


--
-- Name: search_user_filters; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.search_user_filters (
    id integer NOT NULL,
    profile_id integer,
    filter_data jsonb,
    created_at timestamp with time zone DEFAULT now()
);


--
-- Name: search_user_filters_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.search_user_filters ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.search_user_filters_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: skills; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.skills (
    id integer NOT NULL,
    title character varying(256)
);


--
-- Name: skills_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.skills_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: skills_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.skills_id_seq OWNED BY public.skills.id;


--
-- Name: stations; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.stations (
    id integer NOT NULL,
    station_id character varying(256),
    name character varying(256) DEFAULT ''::character varying NOT NULL,
    line character varying(256) DEFAULT ''::character varying NOT NULL
);


--
-- Name: stations_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.stations_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: stations_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.stations_id_seq OWNED BY public.stations.id;


--
-- Name: user_deputy; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.user_deputy (
    id integer NOT NULL,
    profile_id integer,
    "position" text NOT NULL,
    org_id text NOT NULL
);


--
-- Name: user_deputy_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.user_deputy ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.user_deputy_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: user_skills; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.user_skills (
    person_id integer NOT NULL,
    skills integer[]
);


--
-- Name: user_stations; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.user_stations (
    id integer NOT NULL,
    profile_id integer NOT NULL,
    station_id character varying(256) NOT NULL,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP
);


--
-- Name: user_stations_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.user_stations_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: user_stations_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.user_stations_id_seq OWNED BY public.user_stations.id;


--
-- Name: values; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public."values" (
    id integer NOT NULL,
    title text NOT NULL,
    filter_name text NOT NULL,
    filter_value bigint NOT NULL
);


--
-- Name: values_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public."values" ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.values_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: welcome_mail_sent; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.welcome_mail_sent (
    person_id integer NOT NULL
);


--
-- Name: wifi_pass; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wifi_pass (
    id integer NOT NULL,
    name text NOT NULL,
    pass text NOT NULL,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


--
-- Name: wifi_pass_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.wifi_pass_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: wifi_pass_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.wifi_pass_id_seq OWNED BY public.wifi_pass.id;


--
-- Name: workplace_colors; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.workplace_colors (
    org_structure_id character varying(256) NOT NULL,
    hex_color character varying(7) NOT NULL
);


--
-- Name: workplace_events; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.workplace_events (
    person_id integer NOT NULL,
    login text,
    workplace text,
    event_type integer,
    version integer DEFAULT 0,
    is_temporary boolean DEFAULT false,
    CONSTRAINT event_type_not_null CHECK ((event_type IS NOT NULL)),
    CONSTRAINT is_temporary_not_null CHECK ((is_temporary IS NOT NULL)),
    CONSTRAINT login_not_null CHECK ((login IS NOT NULL)),
    CONSTRAINT person_id_not_null CHECK ((person_id IS NOT NULL)),
    CONSTRAINT version_not_null CHECK ((version IS NOT NULL)),
    CONSTRAINT workplace_not_null CHECK ((workplace IS NOT NULL))
);


--
-- Name: workplaces; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.workplaces (
    id character varying(256) NOT NULL,
    x double precision,
    y double precision,
    rotate double precision,
    location_id integer NOT NULL,
    is_reserved boolean DEFAULT false NOT NULL,
    updated_by integer,
    comment text DEFAULT ''::text NOT NULL,
    pk integer NOT NULL
);


--
-- Name: workplaces_pk_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.workplaces ALTER COLUMN pk ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.workplaces_pk_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: schedule; Type: TABLE; Schema: runner; Owner: -
--

CREATE TABLE runner.schedule (
    id integer NOT NULL,
    at text NOT NULL,
    enabled boolean DEFAULT true,
    database text DEFAULT current_database() NOT NULL,
    task_params json NOT NULL,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT schedule_at_check CHECK ((at ~ '^(((\d+,)+\d+|(\d+(\/|-)\d+)|\d+|\*) ?){5}$'::text))
);


--
-- Name: schedule_audit; Type: TABLE; Schema: runner; Owner: -
--

CREATE TABLE runner.schedule_audit (
    prev jsonb,
    current jsonb,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


--
-- Name: schedule_id_seq; Type: SEQUENCE; Schema: runner; Owner: -
--

CREATE SEQUENCE runner.schedule_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: schedule_id_seq; Type: SEQUENCE OWNED BY; Schema: runner; Owner: -
--

ALTER SEQUENCE runner.schedule_id_seq OWNED BY runner.schedule.id;


--
-- Name: task; Type: TABLE; Schema: runner; Owner: -
--

CREATE TABLE runner.task (
    id bigint NOT NULL,
    schedule_id integer,
    scheduled_at timestamp with time zone NOT NULL,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    processed_at timestamp with time zone
);


--
-- Name: task_id_seq; Type: SEQUENCE; Schema: runner; Owner: -
--

CREATE SEQUENCE runner.task_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: task_id_seq; Type: SEQUENCE OWNED BY; Schema: runner; Owner: -
--

ALTER SEQUENCE runner.task_id_seq OWNED BY runner.task.id;


--
-- Name: photos; Type: TABLE; Schema: valentine; Owner: -
--

CREATE TABLE valentine.photos (
    photo_id integer NOT NULL,
    url text NOT NULL
);


--
-- Name: photos_photo_id_seq; Type: SEQUENCE; Schema: valentine; Owner: -
--

ALTER TABLE valentine.photos ALTER COLUMN photo_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME valentine.photos_photo_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: texts; Type: TABLE; Schema: valentine; Owner: -
--

CREATE TABLE valentine.texts (
    text_id integer NOT NULL,
    text text NOT NULL
);


--
-- Name: texts_text_id_seq; Type: SEQUENCE; Schema: valentine; Owner: -
--

ALTER TABLE valentine.texts ALTER COLUMN text_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME valentine.texts_text_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: valentines; Type: TABLE; Schema: valentine; Owner: -
--

CREATE TABLE valentine.valentines (
    valentine_id integer NOT NULL,
    photo_id integer NOT NULL,
    text_id integer NOT NULL,
    created_at timestamp without time zone DEFAULT now() NOT NULL,
    from_login text NOT NULL,
    to_login text NOT NULL,
    is_anonymous boolean DEFAULT true NOT NULL
);


--
-- Name: valentines_valentine_id_seq; Type: SEQUENCE; Schema: valentine; Owner: -
--

ALTER TABLE valentine.valentines ALTER COLUMN valentine_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME valentine.valentines_valentine_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: maps id; Type: DEFAULT; Schema: maps; Owner: -
--

ALTER TABLE ONLY maps.maps ALTER COLUMN id SET DEFAULT nextval('maps.maps_id_seq'::regclass);


--
-- Name: achievements id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.achievements ALTER COLUMN id SET DEFAULT nextval('public.achievements_id_seq'::regclass);


--
-- Name: achievements_owners id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.achievements_owners ALTER COLUMN id SET DEFAULT nextval('public.achievements_owners_id_seq'::regclass);


--
-- Name: cars id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.cars ALTER COLUMN id SET DEFAULT nextval('public.cars_id_seq'::regclass);


--
-- Name: contacts id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.contacts ALTER COLUMN id SET DEFAULT nextval('public.contacts_id_seq'::regclass);


--
-- Name: goose_db_version id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.goose_db_version ALTER COLUMN id SET DEFAULT nextval('public.goose_db_version_id_seq'::regclass);


--
-- Name: goose_db_versions id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.goose_db_versions ALTER COLUMN id SET DEFAULT nextval('public.goose_db_versions_id_seq'::regclass);


--
-- Name: languages_list id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.languages_list ALTER COLUMN id SET DEFAULT nextval('public.languages_list_id_seq'::regclass);


--
-- Name: leader_statuses id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.leader_statuses ALTER COLUMN id SET DEFAULT nextval('public.leader_statuses_id_seq'::regclass);


--
-- Name: leader_statuses_owners id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.leader_statuses_owners ALTER COLUMN id SET DEFAULT nextval('public.leader_statuses_owners_id_seq'::regclass);


--
-- Name: locations id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.locations ALTER COLUMN id SET DEFAULT nextval('public.locations_id_seq'::regclass);


--
-- Name: position_family id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.position_family ALTER COLUMN id SET DEFAULT nextval('public.position_family_id_seq'::regclass);


--
-- Name: position_level id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.position_level ALTER COLUMN id SET DEFAULT nextval('public.position_level_id_seq'::regclass);


--
-- Name: position_level_type id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.position_level_type ALTER COLUMN id SET DEFAULT nextval('public.position_level_type_id_seq'::regclass);


--
-- Name: skills id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.skills ALTER COLUMN id SET DEFAULT nextval('public.skills_id_seq'::regclass);


--
-- Name: stations id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.stations ALTER COLUMN id SET DEFAULT nextval('public.stations_id_seq'::regclass);


--
-- Name: user_stations id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.user_stations ALTER COLUMN id SET DEFAULT nextval('public.user_stations_id_seq'::regclass);


--
-- Name: wifi_pass id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wifi_pass ALTER COLUMN id SET DEFAULT nextval('public.wifi_pass_id_seq'::regclass);


--
-- Name: schedule id; Type: DEFAULT; Schema: runner; Owner: -
--

ALTER TABLE ONLY runner.schedule ALTER COLUMN id SET DEFAULT nextval('runner.schedule_id_seq'::regclass);


--
-- Name: task id; Type: DEFAULT; Schema: runner; Owner: -
--

ALTER TABLE ONLY runner.task ALTER COLUMN id SET DEFAULT nextval('runner.task_id_seq'::regclass);


--
-- Name: props props_ad_name_key; Type: CONSTRAINT; Schema: ad_blacklist; Owner: -
--

ALTER TABLE ONLY ad_blacklist.props
    ADD CONSTRAINT props_ad_name_key UNIQUE (ad_name);


--
-- Name: props props_prop_name_key; Type: CONSTRAINT; Schema: ad_blacklist; Owner: -
--

ALTER TABLE ONLY ad_blacklist.props
    ADD CONSTRAINT props_prop_name_key UNIQUE (prop_name);


--
-- Name: users users_login_disable_sync_key; Type: CONSTRAINT; Schema: ad_blacklist; Owner: -
--

ALTER TABLE ONLY ad_blacklist.users
    ADD CONSTRAINT users_login_disable_sync_key UNIQUE (login, disable_sync);


--
-- Name: mail_result mail_result_pkey; Type: CONSTRAINT; Schema: bonus; Owner: -
--

ALTER TABLE ONLY bonus.mail_result
    ADD CONSTRAINT mail_result_pkey PRIMARY KEY (id);


--
-- Name: promo_code_owner promo_code_owner_pkey; Type: CONSTRAINT; Schema: bonus; Owner: -
--

ALTER TABLE ONLY bonus.promo_code_owner
    ADD CONSTRAINT promo_code_owner_pkey PRIMARY KEY (id);


--
-- Name: promo_code promo_code_pkey; Type: CONSTRAINT; Schema: bonus; Owner: -
--

ALTER TABLE ONLY bonus.promo_code
    ADD CONSTRAINT promo_code_pkey PRIMARY KEY (id);


--
-- Name: persons persons_pkey; Type: CONSTRAINT; Schema: filter; Owner: -
--

ALTER TABLE ONLY filter.persons
    ADD CONSTRAINT persons_pkey PRIMARY KEY (id);


--
-- Name: values values_id_key; Type: CONSTRAINT; Schema: filter; Owner: -
--

ALTER TABLE ONLY filter."values"
    ADD CONSTRAINT values_id_key UNIQUE (id);


--
-- Name: company company_pkey; Type: CONSTRAINT; Schema: human_resource; Owner: -
--

ALTER TABLE ONLY human_resource.company
    ADD CONSTRAINT company_pkey PRIMARY KEY (id);


--
-- Name: employee_events employee_events_pkey; Type: CONSTRAINT; Schema: human_resource; Owner: -
--

ALTER TABLE ONLY human_resource.employee_events
    ADD CONSTRAINT employee_events_pkey PRIMARY KEY (id);


--
-- Name: employees employees_ga_guid_not_null; Type: CHECK CONSTRAINT; Schema: human_resource; Owner: -
--

ALTER TABLE human_resource.employees
    ADD CONSTRAINT employees_ga_guid_not_null CHECK ((ga_guid IS NOT NULL)) NOT VALID;


--
-- Name: employees employees_kpi_group_id_not_null; Type: CHECK CONSTRAINT; Schema: human_resource; Owner: -
--

ALTER TABLE human_resource.employees
    ADD CONSTRAINT employees_kpi_group_id_not_null CHECK ((kpi_group_id IS NOT NULL)) NOT VALID;


--
-- Name: ga_types ga_types_pkey; Type: CONSTRAINT; Schema: human_resource; Owner: -
--

ALTER TABLE ONLY human_resource.ga_types
    ADD CONSTRAINT ga_types_pkey PRIMARY KEY (guid);


--
-- Name: org_structures_events org_structures_events_pkey; Type: CONSTRAINT; Schema: human_resource; Owner: -
--

ALTER TABLE ONLY human_resource.org_structures_events
    ADD CONSTRAINT org_structures_events_pkey PRIMARY KEY (id);


--
-- Name: org_structures org_structures_id_key; Type: CONSTRAINT; Schema: human_resource; Owner: -
--

ALTER TABLE ONLY human_resource.org_structures
    ADD CONSTRAINT org_structures_id_key UNIQUE (id);


--
-- Name: person_accounts_changes_raw person_accounts_changes_raw_pkey; Type: CONSTRAINT; Schema: human_resource; Owner: -
--

ALTER TABLE ONLY human_resource.person_accounts_changes_raw
    ADD CONSTRAINT person_accounts_changes_raw_pkey PRIMARY KEY (id);


--
-- Name: person_greeting_message person_greeting_message_pk; Type: CONSTRAINT; Schema: human_resource; Owner: -
--

ALTER TABLE ONLY human_resource.person_greeting_message
    ADD CONSTRAINT person_greeting_message_pk PRIMARY KEY (person_id);


--
-- Name: person_orgstructure_settings_duplicates person_orgstructure_settings_duplicates_pk; Type: CONSTRAINT; Schema: human_resource; Owner: -
--

ALTER TABLE ONLY human_resource.person_orgstructure_settings_duplicates
    ADD CONSTRAINT person_orgstructure_settings_duplicates_pk PRIMARY KEY (login, org_guid);


--
-- Name: person_orgstructure_settings_orgs person_orgstructure_settings_orgs_pk; Type: CONSTRAINT; Schema: human_resource; Owner: -
--

ALTER TABLE ONLY human_resource.person_orgstructure_settings_orgs
    ADD CONSTRAINT person_orgstructure_settings_orgs_pk PRIMARY KEY (login, org_guid, "position");


--
-- Name: persons persons_pkey; Type: CONSTRAINT; Schema: human_resource; Owner: -
--

ALTER TABLE ONLY human_resource.persons
    ADD CONSTRAINT persons_pkey PRIMARY KEY (id);


--
-- Name: work_info work_info_person_id_key; Type: CONSTRAINT; Schema: human_resource; Owner: -
--

ALTER TABLE ONLY human_resource.work_info
    ADD CONSTRAINT work_info_person_id_key UNIQUE (person_id);


--
-- Name: booking_orgs booking_orgs_org_key; Type: CONSTRAINT; Schema: maps; Owner: -
--

ALTER TABLE ONLY maps.booking_orgs
    ADD CONSTRAINT booking_orgs_org_key UNIQUE (org);


--
-- Name: booking_orgs booking_orgs_pkey; Type: CONSTRAINT; Schema: maps; Owner: -
--

ALTER TABLE ONLY maps.booking_orgs
    ADD CONSTRAINT booking_orgs_pkey PRIMARY KEY (id);


--
-- Name: department_quotas department_quotas_pkey; Type: CONSTRAINT; Schema: maps; Owner: -
--

ALTER TABLE ONLY maps.department_quotas
    ADD CONSTRAINT department_quotas_pkey PRIMARY KEY (id);


--
-- Name: department_workplaces department_workplaces_pkey; Type: CONSTRAINT; Schema: maps; Owner: -
--

ALTER TABLE ONLY maps.department_workplaces
    ADD CONSTRAINT department_workplaces_pkey PRIMARY KEY (id);


--
-- Name: hierarchy hierarchy_pkey; Type: CONSTRAINT; Schema: maps; Owner: -
--

ALTER TABLE ONLY maps.hierarchy
    ADD CONSTRAINT hierarchy_pkey PRIMARY KEY (id);


--
-- Name: maps maps_pkey; Type: CONSTRAINT; Schema: maps; Owner: -
--

ALTER TABLE ONLY maps.maps
    ADD CONSTRAINT maps_pkey PRIMARY KEY (id);


--
-- Name: person_schedule_bookings person_schedule_bookings_pkey; Type: CONSTRAINT; Schema: maps; Owner: -
--

ALTER TABLE ONLY maps.person_schedule_bookings
    ADD CONSTRAINT person_schedule_bookings_pkey PRIMARY KEY (id);


--
-- Name: person_schedules person_schedules_pkey; Type: CONSTRAINT; Schema: maps; Owner: -
--

ALTER TABLE ONLY maps.person_schedules
    ADD CONSTRAINT person_schedules_pkey PRIMARY KEY (person_id);


--
-- Name: user_workplaces user_workplaces_login_key; Type: CONSTRAINT; Schema: maps; Owner: -
--

ALTER TABLE ONLY maps.user_workplaces
    ADD CONSTRAINT user_workplaces_login_key UNIQUE (login);


--
-- Name: user_workplaces user_workplaces_pkey; Type: CONSTRAINT; Schema: maps; Owner: -
--

ALTER TABLE ONLY maps.user_workplaces
    ADD CONSTRAINT user_workplaces_pkey PRIMARY KEY (id);


--
-- Name: workplace_events workplace_events_pk; Type: CONSTRAINT; Schema: maps; Owner: -
--

ALTER TABLE ONLY maps.workplace_events
    ADD CONSTRAINT workplace_events_pk PRIMARY KEY (person_id);


--
-- Name: trees trees_pkey; Type: CONSTRAINT; Schema: new_year; Owner: -
--

ALTER TABLE ONLY new_year.trees
    ADD CONSTRAINT trees_pkey PRIMARY KEY (person_id);


--
-- Name: achievements_owners achievements_owners_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.achievements_owners
    ADD CONSTRAINT achievements_owners_pk PRIMARY KEY (id);


--
-- Name: achievements achievements_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.achievements
    ADD CONSTRAINT achievements_pk PRIMARY KEY (id);


--
-- Name: assign_achievements assign_achievements_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.assign_achievements
    ADD CONSTRAINT assign_achievements_pk PRIMARY KEY (profile_id, achievement_id);


--
-- Name: contacts behance_size; Type: CHECK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE public.contacts
    ADD CONSTRAINT behance_size CHECK ((length(behance) <= 256)) NOT VALID;


--
-- Name: cars cars_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.cars
    ADD CONSTRAINT cars_pkey PRIMARY KEY (id);


--
-- Name: change_events change_events_person_id_type_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.change_events
    ADD CONSTRAINT change_events_person_id_type_key UNIQUE (person_id, type);


--
-- Name: change_events change_events_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.change_events
    ADD CONSTRAINT change_events_pkey PRIMARY KEY (id);


--
-- Name: change_log change_log_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.change_log
    ADD CONSTRAINT change_log_pkey PRIMARY KEY (id);


--
-- Name: company_color company_color_company_id_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.company_color
    ADD CONSTRAINT company_color_company_id_key UNIQUE (company_id);


--
-- Name: company company_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.company
    ADD CONSTRAINT company_pk PRIMARY KEY (id);


--
-- Name: contacts contacts_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.contacts
    ADD CONSTRAINT contacts_pkey PRIMARY KEY (profile_id);


--
-- Name: countries countries_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.countries
    ADD CONSTRAINT countries_pkey PRIMARY KEY (id);


--
-- Name: contacts facebook_size; Type: CHECK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE public.contacts
    ADD CONSTRAINT facebook_size CHECK ((length(facebook) <= 256)) NOT VALID;


--
-- Name: file_changes file_changes_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.file_changes
    ADD CONSTRAINT file_changes_pkey PRIMARY KEY (id);


--
-- Name: goose_db_version goose_db_version_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.goose_db_version
    ADD CONSTRAINT goose_db_version_pkey PRIMARY KEY (id);


--
-- Name: goose_db_versions goose_db_versions_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.goose_db_versions
    ADD CONSTRAINT goose_db_versions_pkey PRIMARY KEY (id);


--
-- Name: hrbp_org_structures hrbp_org_structures_top_org_structure_id_profile_id_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.hrbp_org_structures
    ADD CONSTRAINT hrbp_org_structures_top_org_structure_id_profile_id_key UNIQUE (top_org_structure_id, profile_id);


--
-- Name: info info_profile_id_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.info
    ADD CONSTRAINT info_profile_id_key UNIQUE (profile_id);


--
-- Name: contacts instagram_size; Type: CHECK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE public.contacts
    ADD CONSTRAINT instagram_size CHECK ((length(instagram) <= 256)) NOT VALID;


--
-- Name: languages_assigned languages_assigned_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.languages_assigned
    ADD CONSTRAINT languages_assigned_pk PRIMARY KEY (person_id);


--
-- Name: languages_list languages_list_name_unique; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.languages_list
    ADD CONSTRAINT languages_list_name_unique UNIQUE (name);


--
-- Name: languages_list languages_list_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.languages_list
    ADD CONSTRAINT languages_list_pk PRIMARY KEY (id);


--
-- Name: leader_statuses leader_statuses_label_cst; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.leader_statuses
    ADD CONSTRAINT leader_statuses_label_cst UNIQUE (label);


--
-- Name: leader_statuses_owners leader_statuses_owners_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.leader_statuses_owners
    ADD CONSTRAINT leader_statuses_owners_pkey PRIMARY KEY (id);


--
-- Name: leader_statuses_owners leader_statuses_owners_profile_id_cst; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.leader_statuses_owners
    ADD CONSTRAINT leader_statuses_owners_profile_id_cst UNIQUE (profile_id);


--
-- Name: leader_statuses leader_statuses_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.leader_statuses
    ADD CONSTRAINT leader_statuses_pkey PRIMARY KEY (id);


--
-- Name: locations locations_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.locations
    ADD CONSTRAINT locations_pkey PRIMARY KEY (id);


--
-- Name: mail_tasks mail_tasks_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.mail_tasks
    ADD CONSTRAINT mail_tasks_pkey PRIMARY KEY (id);


--
-- Name: maps_events maps_events_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.maps_events
    ADD CONSTRAINT maps_events_pkey PRIMARY KEY (id);


--
-- Name: org_subscriptions org_subscriptions_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.org_subscriptions
    ADD CONSTRAINT org_subscriptions_pkey PRIMARY KEY (person_id, subscription);


--
-- Name: phone_codes phone_codes_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.phone_codes
    ADD CONSTRAINT phone_codes_pkey PRIMARY KEY (id);


--
-- Name: phone_events phone_events_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.phone_events
    ADD CONSTRAINT phone_events_pk PRIMARY KEY (person_id);


--
-- Name: photo_events photo_events_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.photo_events
    ADD CONSTRAINT photo_events_pkey PRIMARY KEY (person_id);


--
-- Name: portal_events portal_events_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.portal_events
    ADD CONSTRAINT portal_events_pkey PRIMARY KEY (id);


--
-- Name: position_family position_family_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.position_family
    ADD CONSTRAINT position_family_pkey PRIMARY KEY (id);


--
-- Name: position_level position_level_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.position_level
    ADD CONSTRAINT position_level_pkey PRIMARY KEY (id);


--
-- Name: position_level_type position_level_type_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.position_level_type
    ADD CONSTRAINT position_level_type_pkey PRIMARY KEY (id);


--
-- Name: skills skills_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.skills
    ADD CONSTRAINT skills_pkey PRIMARY KEY (id);


--
-- Name: stations stations_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.stations
    ADD CONSTRAINT stations_pkey PRIMARY KEY (id);


--
-- Name: stations stations_station_id_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.stations
    ADD CONSTRAINT stations_station_id_key UNIQUE (station_id);


--
-- Name: contacts tiktok_size; Type: CHECK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE public.contacts
    ADD CONSTRAINT tiktok_size CHECK ((length(tik_tok) <= 256)) NOT VALID;


--
-- Name: user_deputy user_deputy_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.user_deputy
    ADD CONSTRAINT user_deputy_pkey PRIMARY KEY (id);


--
-- Name: user_skills user_skills_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.user_skills
    ADD CONSTRAINT user_skills_pk PRIMARY KEY (person_id);


--
-- Name: user_stations user_stations_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.user_stations
    ADD CONSTRAINT user_stations_pkey PRIMARY KEY (id);


--
-- Name: values values_id_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public."values"
    ADD CONSTRAINT values_id_key UNIQUE (id);


--
-- Name: contacts vk_size; Type: CHECK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE public.contacts
    ADD CONSTRAINT vk_size CHECK ((length(vk) <= 256)) NOT VALID;


--
-- Name: welcome_mail_sent welcome_mail_sent_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.welcome_mail_sent
    ADD CONSTRAINT welcome_mail_sent_pk PRIMARY KEY (person_id);


--
-- Name: wifi_pass wifi_pass_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wifi_pass
    ADD CONSTRAINT wifi_pass_pkey PRIMARY KEY (id);


--
-- Name: workplace_colors workplace_colors_org_structure_id_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.workplace_colors
    ADD CONSTRAINT workplace_colors_org_structure_id_key UNIQUE (org_structure_id);


--
-- Name: workplace_events workplace_events_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.workplace_events
    ADD CONSTRAINT workplace_events_pk PRIMARY KEY (person_id);


--
-- Name: workplaces workplaces_pk; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.workplaces
    ADD CONSTRAINT workplaces_pk UNIQUE (id, location_id);


--
-- Name: workplaces workplaces_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.workplaces
    ADD CONSTRAINT workplaces_pkey PRIMARY KEY (pk);


--
-- Name: contacts youtube_size; Type: CHECK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE public.contacts
    ADD CONSTRAINT youtube_size CHECK ((length(you_tube) <= 256)) NOT VALID;


--
-- Name: schedule schedule_pkey; Type: CONSTRAINT; Schema: runner; Owner: -
--

ALTER TABLE ONLY runner.schedule
    ADD CONSTRAINT schedule_pkey PRIMARY KEY (id);


--
-- Name: task task_pkey; Type: CONSTRAINT; Schema: runner; Owner: -
--

ALTER TABLE ONLY runner.task
    ADD CONSTRAINT task_pkey PRIMARY KEY (id);


--
-- Name: photos photos_pkey; Type: CONSTRAINT; Schema: valentine; Owner: -
--

ALTER TABLE ONLY valentine.photos
    ADD CONSTRAINT photos_pkey PRIMARY KEY (photo_id);


--
-- Name: texts texts_pkey; Type: CONSTRAINT; Schema: valentine; Owner: -
--

ALTER TABLE ONLY valentine.texts
    ADD CONSTRAINT texts_pkey PRIMARY KEY (text_id);


--
-- Name: valentines valentines_pkey; Type: CONSTRAINT; Schema: valentine; Owner: -
--

ALTER TABLE ONLY valentine.valentines
    ADD CONSTRAINT valentines_pkey PRIMARY KEY (valentine_id);


--
-- Name: filter_first_day; Type: INDEX; Schema: filter; Owner: -
--

CREATE INDEX filter_first_day ON filter.persons USING btree (first_day);


--
-- Name: filter_value_filter_name; Type: INDEX; Schema: filter; Owner: -
--

CREATE UNIQUE INDEX filter_value_filter_name ON filter."values" USING btree (filter_value, filter_name);


--
-- Name: filter_value_gin; Type: INDEX; Schema: filter; Owner: -
--

CREATE INDEX filter_value_gin ON filter.persons USING gin (filter_value) WITH (fastupdate='false');


--
-- Name: employee_position_fulltext_vector_idx; Type: INDEX; Schema: human_resource; Owner: -
--

CREATE INDEX employee_position_fulltext_vector_idx ON human_resource.employees USING gin (to_tsvector('simple'::regconfig, replace(
CASE
    WHEN (length(position_alias) > 0) THEN position_alias
    ELSE "position"
END, 'ё'::text, 'е'::text))) WITH (fastupdate='false');


--
-- Name: employees_dms_not_null; Type: INDEX; Schema: human_resource; Owner: -
--

CREATE INDEX employees_dms_not_null ON human_resource.employees USING btree (((dms_number IS NOT NULL)));


--
-- Name: employees_guid_uniq_idx; Type: INDEX; Schema: human_resource; Owner: -
--

CREATE UNIQUE INDEX employees_guid_uniq_idx ON human_resource.employees USING btree (guid);


--
-- Name: employees_head_guid_idx; Type: INDEX; Schema: human_resource; Owner: -
--

CREATE INDEX employees_head_guid_idx ON human_resource.employees USING btree (head_position_guid);


--
-- Name: employees_head_person_id_idx; Type: INDEX; Schema: human_resource; Owner: -
--

CREATE INDEX employees_head_person_id_idx ON human_resource.employees USING btree (head_person_id);


--
-- Name: employees_is_active_is_main_idx; Type: INDEX; Schema: human_resource; Owner: -
--

CREATE INDEX employees_is_active_is_main_idx ON human_resource.employees USING btree (is_active, is_main);


--
-- Name: employees_org_structure_guid_is_active_is_main_idx; Type: INDEX; Schema: human_resource; Owner: -
--

CREATE INDEX employees_org_structure_guid_is_active_is_main_idx ON human_resource.employees USING btree (is_active, is_main, org_structure_guid);


--
-- Name: employees_person_id_idx; Type: INDEX; Schema: human_resource; Owner: -
--

CREATE INDEX employees_person_id_idx ON human_resource.employees USING btree (person_id);


--
-- Name: employees_surname_name_patronymic_index; Type: INDEX; Schema: human_resource; Owner: -
--

CREATE INDEX employees_surname_name_patronymic_index ON human_resource.persons USING btree (surname, name, patronymic);


--
-- Name: emplyoees_position_text_idx; Type: INDEX; Schema: human_resource; Owner: -
--

CREATE INDEX emplyoees_position_text_idx ON human_resource.employees USING gin (to_tsvector('simple'::regconfig, replace(lower(
CASE
    WHEN (length(position_alias) > 0) THEN position_alias
    ELSE "position"
END), 'ё'::text, 'е'::text)));


--
-- Name: event_processed_at; Type: INDEX; Schema: human_resource; Owner: -
--

CREATE INDEX event_processed_at ON human_resource.employee_events USING btree (processed_at);


--
-- Name: org_event_processed_at; Type: INDEX; Schema: human_resource; Owner: -
--

CREATE INDEX org_event_processed_at ON human_resource.org_structures_events USING btree (processed_at);


--
-- Name: org_structures_bp_id_idx; Type: INDEX; Schema: human_resource; Owner: -
--

CREATE INDEX org_structures_bp_id_idx ON human_resource.org_structures USING btree (bp_id);


--
-- Name: org_structures_name_idx; Type: INDEX; Schema: human_resource; Owner: -
--

CREATE INDEX org_structures_name_idx ON human_resource.org_structures USING btree (name);


--
-- Name: org_structures_parent_id_idx; Type: INDEX; Schema: human_resource; Owner: -
--

CREATE INDEX org_structures_parent_id_idx ON human_resource.org_structures USING brin (parent_id);


--
-- Name: org_structures_uniq_idx; Type: INDEX; Schema: human_resource; Owner: -
--

CREATE UNIQUE INDEX org_structures_uniq_idx ON human_resource.org_structures USING btree (id);


--
-- Name: org_structures_vertical_ids_idx; Type: INDEX; Schema: human_resource; Owner: -
--

CREATE INDEX org_structures_vertical_ids_idx ON human_resource.org_structures USING gin (vertical_ids);


--
-- Name: person_accounts_change_sid_idx; Type: INDEX; Schema: human_resource; Owner: -
--

CREATE INDEX person_accounts_change_sid_idx ON human_resource.person_accounts_changes_raw USING brin (sid);


--
-- Name: person_greeting_message_person_id_uindex; Type: INDEX; Schema: human_resource; Owner: -
--

CREATE UNIQUE INDEX person_greeting_message_person_id_uindex ON human_resource.person_greeting_message USING btree (person_id);


--
-- Name: person_orgstructure_settings_login; Type: INDEX; Schema: human_resource; Owner: -
--

CREATE UNIQUE INDEX person_orgstructure_settings_login ON human_resource.person_orgstructure_settings USING btree (login);


--
-- Name: persons_fullname_idx; Type: INDEX; Schema: human_resource; Owner: -
--

CREATE INDEX persons_fullname_idx ON human_resource.persons USING gin (to_tsvector('simple'::regconfig, replace(lower(((((((((((((((login || ' '::text) || email) || ' '::text) || surname) || ' '::text) || name) || ' '::text) || patronymic) || ' '::text) || surname_en) || ' '::text) || name_en) || ' '::text) || patronymic_en)), 'ё'::text, 'е'::text)));


--
-- Name: persons_fullname_without_patronymic_idx; Type: INDEX; Schema: human_resource; Owner: -
--

CREATE INDEX persons_fullname_without_patronymic_idx ON human_resource.persons USING gin (to_tsvector('simple'::regconfig, replace(lower(((((((((((login || ' '::text) || email) || ' '::text) || surname) || ' '::text) || name) || ' '::text) || surname_en) || ' '::text) || name_en)), 'ё'::text, 'е'::text)));


--
-- Name: persons_fulltext_vector_idx; Type: INDEX; Schema: human_resource; Owner: -
--

CREATE INDEX persons_fulltext_vector_idx ON human_resource.persons USING gin ((((((((setweight(to_tsvector('simple'::regconfig, replace(login, 'ё'::text, 'е'::text)), 'A'::"char") || setweight(to_tsvector('simple'::regconfig, replace(surname, 'ё'::text, 'е'::text)), 'A'::"char")) || setweight(to_tsvector('simple'::regconfig, replace(name, 'ё'::text, 'е'::text)), 'B'::"char")) || setweight(to_tsvector('simple'::regconfig, replace(patronymic, 'ё'::text, 'е'::text)), 'C'::"char")) || setweight(to_tsvector('simple'::regconfig, replace(surname_en, 'ё'::text, 'е'::text)), 'B'::"char")) || setweight(to_tsvector('simple'::regconfig, replace(name_en, 'ё'::text, 'е'::text)), 'C'::"char")) || setweight(to_tsvector('simple'::regconfig, replace(patronymic_en, 'ё'::text, 'е'::text)), 'D'::"char")))) WITH (fastupdate='false');


--
-- Name: persons_login_idx; Type: INDEX; Schema: human_resource; Owner: -
--

CREATE INDEX persons_login_idx ON human_resource.persons USING btree (login);


--
-- Name: persons_login_name_idx; Type: INDEX; Schema: human_resource; Owner: -
--

CREATE INDEX persons_login_name_idx ON human_resource.persons USING gist (to_tsvector('simple'::regconfig, replace(lower(((((((login || ' '::text) || surname) || ' '::text) || name) || ' '::text) || patronymic)), 'ё'::text, 'е'::text)));


--
-- Name: persons_sid_idx; Type: INDEX; Schema: human_resource; Owner: -
--

CREATE INDEX persons_sid_idx ON human_resource.persons USING btree (sid);


--
-- Name: persons_sid_uniq_idx; Type: INDEX; Schema: human_resource; Owner: -
--

CREATE UNIQUE INDEX persons_sid_uniq_idx ON human_resource.persons USING btree (sid) WHERE (length(sid) > 0);


--
-- Name: department_quotas_department_guid_uniq; Type: INDEX; Schema: maps; Owner: -
--

CREATE UNIQUE INDEX department_quotas_department_guid_uniq ON maps.department_quotas USING btree (department_guid);


--
-- Name: person_schedule_bookings_person_id_date; Type: INDEX; Schema: maps; Owner: -
--

CREATE INDEX person_schedule_bookings_person_id_date ON maps.person_schedule_bookings USING btree (person_id, date);


--
-- Name: user_workplaces_loc_id_idx; Type: INDEX; Schema: maps; Owner: -
--

CREATE INDEX user_workplaces_loc_id_idx ON maps.user_workplaces USING btree (location_id);


--
-- Name: tree_toys_person_idx; Type: INDEX; Schema: new_year; Owner: -
--

CREATE INDEX tree_toys_person_idx ON new_year.tree_toys USING btree (person_id);


--
-- Name: achievements_id_uindex; Type: INDEX; Schema: public; Owner: -
--

CREATE UNIQUE INDEX achievements_id_uindex ON public.achievements USING btree (id);


--
-- Name: achievements_name_description_idx; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX achievements_name_description_idx ON public.achievements USING gin (to_tsvector('simple'::regconfig, replace(lower((((name)::text || ' '::text) || (description)::text)), 'ё'::text, 'е'::text)));


--
-- Name: achievements_owners_id_uindex; Type: INDEX; Schema: public; Owner: -
--

CREATE UNIQUE INDEX achievements_owners_id_uindex ON public.achievements_owners USING btree (id);


--
-- Name: contacts_profile_id_uniq_idx; Type: INDEX; Schema: public; Owner: -
--

CREATE UNIQUE INDEX contacts_profile_id_uniq_idx ON public.contacts USING btree (profile_id);


--
-- Name: filter_value_filter_name; Type: INDEX; Schema: public; Owner: -
--

CREATE UNIQUE INDEX filter_value_filter_name ON public."values" USING btree (filter_value, filter_name);


--
-- Name: languages_assigned_person_id_uindex; Type: INDEX; Schema: public; Owner: -
--

CREATE UNIQUE INDEX languages_assigned_person_id_uindex ON public.languages_assigned USING btree (person_id);


--
-- Name: languages_list_id_uindex; Type: INDEX; Schema: public; Owner: -
--

CREATE UNIQUE INDEX languages_list_id_uindex ON public.languages_list USING btree (id);


--
-- Name: leader_statuses_lower_label_idx; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX leader_statuses_lower_label_idx ON public.leader_statuses USING btree (lower(label));


--
-- Name: portal_events_types_idx; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX portal_events_types_idx ON public.portal_events USING btree (id, event_type);


--
-- Name: remote_person_id_uindex; Type: INDEX; Schema: public; Owner: -
--

CREATE UNIQUE INDEX remote_person_id_uindex ON public.remote USING btree (person_id);


--
-- Name: employee_events tg_employee_event_insert_anonymize; Type: TRIGGER; Schema: human_resource; Owner: -
--

CREATE TRIGGER tg_employee_event_insert_anonymize BEFORE INSERT ON human_resource.employee_events FOR EACH ROW EXECUTE FUNCTION public.anonymize_employee_event();


--
-- Name: employee_events tg_employee_event_update_anonymize; Type: TRIGGER; Schema: human_resource; Owner: -
--

CREATE TRIGGER tg_employee_event_update_anonymize BEFORE UPDATE ON human_resource.employee_events FOR EACH ROW EXECUTE FUNCTION public.anonymize_employee_event();


--
-- Name: schedule process_audit_schedule; Type: TRIGGER; Schema: runner; Owner: -
--

CREATE TRIGGER process_audit_schedule AFTER INSERT OR DELETE OR UPDATE ON runner.schedule FOR EACH ROW EXECUTE FUNCTION runner.process_audit();


--
-- Name: schedule schedule_check_trigger; Type: TRIGGER; Schema: runner; Owner: -
--

CREATE TRIGGER schedule_check_trigger BEFORE INSERT OR UPDATE ON runner.schedule FOR EACH ROW EXECUTE FUNCTION runner.schedule_validate();


--
-- Name: users users_disable_sync_fkey; Type: FK CONSTRAINT; Schema: ad_blacklist; Owner: -
--

ALTER TABLE ONLY ad_blacklist.users
    ADD CONSTRAINT users_disable_sync_fkey FOREIGN KEY (disable_sync) REFERENCES ad_blacklist.props(prop_name) ON DELETE CASCADE;


--
-- Name: promo_code promo_code_owner_fkey; Type: FK CONSTRAINT; Schema: bonus; Owner: -
--

ALTER TABLE ONLY bonus.promo_code
    ADD CONSTRAINT promo_code_owner_fkey FOREIGN KEY (owner) REFERENCES bonus.promo_code_owner(id);


--
-- Name: persons persons_employee_guid_fkey; Type: FK CONSTRAINT; Schema: filter; Owner: -
--

ALTER TABLE ONLY filter.persons
    ADD CONSTRAINT persons_employee_guid_fkey FOREIGN KEY (employee_guid) REFERENCES human_resource.employees(guid);


--
-- Name: persons persons_person_id_fkey; Type: FK CONSTRAINT; Schema: filter; Owner: -
--

ALTER TABLE ONLY filter.persons
    ADD CONSTRAINT persons_person_id_fkey FOREIGN KEY (person_id) REFERENCES human_resource.persons(id);


--
-- Name: person_greeting_message person_greeting_message_persons_id_fk; Type: FK CONSTRAINT; Schema: human_resource; Owner: -
--

ALTER TABLE ONLY human_resource.person_greeting_message
    ADD CONSTRAINT person_greeting_message_persons_id_fk FOREIGN KEY (person_id) REFERENCES human_resource.persons(id);


--
-- Name: work_info work_info_person_id_fkey; Type: FK CONSTRAINT; Schema: human_resource; Owner: -
--

ALTER TABLE ONLY human_resource.work_info
    ADD CONSTRAINT work_info_person_id_fkey FOREIGN KEY (person_id) REFERENCES human_resource.persons(id);


--
-- Name: maps contacts_hierarchy_id_fkey; Type: FK CONSTRAINT; Schema: maps; Owner: -
--

ALTER TABLE ONLY maps.maps
    ADD CONSTRAINT contacts_hierarchy_id_fkey FOREIGN KEY (hierarchy_id) REFERENCES maps.hierarchy(id);


--
-- Name: hierarchy hierarchy_parent_id_fkey; Type: FK CONSTRAINT; Schema: maps; Owner: -
--

ALTER TABLE ONLY maps.hierarchy
    ADD CONSTRAINT hierarchy_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES maps.hierarchy(id);


--
-- Name: workplace_events workplace_events_persons_id_fk; Type: FK CONSTRAINT; Schema: maps; Owner: -
--

ALTER TABLE ONLY maps.workplace_events
    ADD CONSTRAINT workplace_events_persons_id_fk FOREIGN KEY (person_id) REFERENCES human_resource.persons(id);


--
-- Name: achievements_owners achievements_owners_achievements_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.achievements_owners
    ADD CONSTRAINT achievements_owners_achievements_id_fk FOREIGN KEY (achievement_id) REFERENCES public.achievements(id) ON DELETE CASCADE;


--
-- Name: assign_achievements assign_achievements_achievements_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.assign_achievements
    ADD CONSTRAINT assign_achievements_achievements_id_fk FOREIGN KEY (achievement_id) REFERENCES public.achievements(id) ON DELETE CASCADE;


--
-- Name: contacts contacts_phone_code_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.contacts
    ADD CONSTRAINT contacts_phone_code_id_fkey FOREIGN KEY (phone_code_id) REFERENCES public.phone_codes(id);


--
-- Name: languages_assigned languages_assigned_languages_list_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.languages_assigned
    ADD CONSTRAINT languages_assigned_languages_list_id_fk FOREIGN KEY (lan_one) REFERENCES public.languages_list(id);


--
-- Name: languages_assigned languages_assigned_languages_list_id_fk_2; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.languages_assigned
    ADD CONSTRAINT languages_assigned_languages_list_id_fk_2 FOREIGN KEY (lan_two) REFERENCES public.languages_list(id);


--
-- Name: languages_assigned languages_assigned_languages_list_id_fk_3; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.languages_assigned
    ADD CONSTRAINT languages_assigned_languages_list_id_fk_3 FOREIGN KEY (lan_three) REFERENCES public.languages_list(id);


--
-- Name: leader_statuses_owners leader_statuses_owners_leader_status_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.leader_statuses_owners
    ADD CONSTRAINT leader_statuses_owners_leader_status_fkey FOREIGN KEY (leader_status) REFERENCES public.leader_statuses(id);


--
-- Name: leader_statuses_owners leader_statuses_owners_profile_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.leader_statuses_owners
    ADD CONSTRAINT leader_statuses_owners_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES human_resource.persons(id);


--
-- Name: org_subscriptions org_subscriptions_org_structures_name_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.org_subscriptions
    ADD CONSTRAINT org_subscriptions_org_structures_name_fk FOREIGN KEY (subscription) REFERENCES human_resource.org_structures(id);


--
-- Name: org_subscriptions org_subscriptions_persons_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.org_subscriptions
    ADD CONSTRAINT org_subscriptions_persons_id_fk FOREIGN KEY (person_id) REFERENCES human_resource.persons(id);


--
-- Name: phone_codes phone_codes_country_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.phone_codes
    ADD CONSTRAINT phone_codes_country_fkey FOREIGN KEY (country) REFERENCES public.countries(id);


--
-- Name: phone_events phone_events_persons_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.phone_events
    ADD CONSTRAINT phone_events_persons_id_fk FOREIGN KEY (person_id) REFERENCES human_resource.persons(id);


--
-- Name: position_level position_level_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.position_level
    ADD CONSTRAINT position_level_type_id_fkey FOREIGN KEY (type_id) REFERENCES public.position_level_type(id);


--
-- Name: remote remote_persons_id_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.remote
    ADD CONSTRAINT remote_persons_id_fk FOREIGN KEY (person_id) REFERENCES human_resource.persons(id);


--
-- Name: user_stations user_stations_station_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.user_stations
    ADD CONSTRAINT user_stations_station_id_fkey FOREIGN KEY (station_id) REFERENCES public.stations(station_id);


--
-- Name: task task_schedule_id_fkey; Type: FK CONSTRAINT; Schema: runner; Owner: -
--

ALTER TABLE ONLY runner.task
    ADD CONSTRAINT task_schedule_id_fkey FOREIGN KEY (schedule_id) REFERENCES runner.schedule(id);


--
-- Name: valentines valentines_photo_id_fkey; Type: FK CONSTRAINT; Schema: valentine; Owner: -
--

ALTER TABLE ONLY valentine.valentines
    ADD CONSTRAINT valentines_photo_id_fkey FOREIGN KEY (photo_id) REFERENCES valentine.photos(photo_id);


--
-- Name: valentines valentines_text_id_fkey; Type: FK CONSTRAINT; Schema: valentine; Owner: -
--

ALTER TABLE ONLY valentine.valentines
    ADD CONSTRAINT valentines_text_id_fkey FOREIGN KEY (text_id) REFERENCES valentine.texts(text_id);


--
-- Name: SCHEMA ad_blacklist; Type: ACL; Schema: -; Owner: -
--

GRANT USAGE ON SCHEMA ad_blacklist TO read_only;
GRANT USAGE ON SCHEMA ad_blacklist TO read_write;


--
-- Name: SCHEMA bonus; Type: ACL; Schema: -; Owner: -
--

GRANT USAGE ON SCHEMA bonus TO read_only;
GRANT USAGE ON SCHEMA bonus TO read_write;


--
-- Name: SCHEMA filter; Type: ACL; Schema: -; Owner: -
--

GRANT USAGE ON SCHEMA filter TO read_only;
GRANT USAGE ON SCHEMA filter TO read_write;


--
-- Name: SCHEMA human_resource; Type: ACL; Schema: -; Owner: -
--

GRANT USAGE ON SCHEMA human_resource TO read_only;
GRANT USAGE ON SCHEMA human_resource TO read_write;


--
-- Name: SCHEMA maps; Type: ACL; Schema: -; Owner: -
--

GRANT USAGE ON SCHEMA maps TO read_only;
GRANT USAGE ON SCHEMA maps TO read_write;


--
-- Name: SCHEMA new_year; Type: ACL; Schema: -; Owner: -
--

GRANT USAGE ON SCHEMA new_year TO read_only;
GRANT USAGE ON SCHEMA new_year TO read_write;


--
-- Name: SCHEMA public; Type: ACL; Schema: -; Owner: -
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
GRANT USAGE ON SCHEMA public TO PUBLIC;
GRANT CREATE ON SCHEMA public TO "staff-portal-api-user";
GRANT USAGE ON SCHEMA public TO read_only;
GRANT USAGE ON SCHEMA public TO read_write;


--
-- Name: SCHEMA runner; Type: ACL; Schema: -; Owner: -
--

GRANT USAGE ON SCHEMA runner TO read_only;
GRANT USAGE ON SCHEMA runner TO read_write;


--
-- Name: SCHEMA valentine; Type: ACL; Schema: -; Owner: -
--

GRANT USAGE ON SCHEMA valentine TO read_only;
GRANT USAGE ON SCHEMA valentine TO read_write;


--
-- Name: FUNCTION pg_create_restore_point(text); Type: ACL; Schema: pg_catalog; Owner: -
--

GRANT ALL ON FUNCTION pg_catalog.pg_create_restore_point(text) TO PUBLIC;


--
-- Name: FUNCTION pg_buffercache_pages(); Type: ACL; Schema: public; Owner: -
--

GRANT ALL ON FUNCTION public.pg_buffercache_pages() TO "staff-portal-api-user";


--
-- Name: TABLE props; Type: ACL; Schema: ad_blacklist; Owner: -
--

GRANT SELECT ON TABLE ad_blacklist.props TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE ad_blacklist.props TO read_write;


--
-- Name: TABLE users; Type: ACL; Schema: ad_blacklist; Owner: -
--

GRANT SELECT ON TABLE ad_blacklist.users TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE ad_blacklist.users TO read_write;


--
-- Name: TABLE mail_result; Type: ACL; Schema: bonus; Owner: -
--

GRANT SELECT ON TABLE bonus.mail_result TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE bonus.mail_result TO read_write;


--
-- Name: SEQUENCE mail_result_id_seq; Type: ACL; Schema: bonus; Owner: -
--

GRANT SELECT ON SEQUENCE bonus.mail_result_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE bonus.mail_result_id_seq TO read_write;


--
-- Name: TABLE promo_code; Type: ACL; Schema: bonus; Owner: -
--

GRANT SELECT ON TABLE bonus.promo_code TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE bonus.promo_code TO read_write;


--
-- Name: TABLE promo_code_owner; Type: ACL; Schema: bonus; Owner: -
--

GRANT SELECT ON TABLE bonus.promo_code_owner TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE bonus.promo_code_owner TO read_write;


--
-- Name: TABLE persons; Type: ACL; Schema: filter; Owner: -
--

GRANT SELECT ON TABLE filter.persons TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE filter.persons TO read_write;


--
-- Name: SEQUENCE persons_id_seq; Type: ACL; Schema: filter; Owner: -
--

GRANT SELECT ON SEQUENCE filter.persons_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE filter.persons_id_seq TO read_write;


--
-- Name: TABLE "values"; Type: ACL; Schema: filter; Owner: -
--

GRANT SELECT ON TABLE filter."values" TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE filter."values" TO read_write;


--
-- Name: SEQUENCE values_id_seq; Type: ACL; Schema: filter; Owner: -
--

GRANT SELECT ON SEQUENCE filter.values_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE filter.values_id_seq TO read_write;


--
-- Name: TABLE company; Type: ACL; Schema: human_resource; Owner: -
--

GRANT SELECT ON TABLE human_resource.company TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE human_resource.company TO read_write;


--
-- Name: SEQUENCE company_id_seq; Type: ACL; Schema: human_resource; Owner: -
--

GRANT SELECT ON SEQUENCE human_resource.company_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE human_resource.company_id_seq TO read_write;


--
-- Name: TABLE employee_events; Type: ACL; Schema: human_resource; Owner: -
--

GRANT SELECT ON TABLE human_resource.employee_events TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE human_resource.employee_events TO read_write;


--
-- Name: TABLE employees; Type: ACL; Schema: human_resource; Owner: -
--

GRANT SELECT ON TABLE human_resource.employees TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE human_resource.employees TO read_write;


--
-- Name: TABLE ga_types; Type: ACL; Schema: human_resource; Owner: -
--

GRANT SELECT ON TABLE human_resource.ga_types TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE human_resource.ga_types TO read_write;


--
-- Name: TABLE org_structures; Type: ACL; Schema: human_resource; Owner: -
--

GRANT SELECT ON TABLE human_resource.org_structures TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE human_resource.org_structures TO read_write;


--
-- Name: TABLE org_structures_events; Type: ACL; Schema: human_resource; Owner: -
--

GRANT SELECT ON TABLE human_resource.org_structures_events TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE human_resource.org_structures_events TO read_write;


--
-- Name: TABLE person_accounts_changes_raw; Type: ACL; Schema: human_resource; Owner: -
--

GRANT SELECT ON TABLE human_resource.person_accounts_changes_raw TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE human_resource.person_accounts_changes_raw TO read_write;


--
-- Name: SEQUENCE person_accounts_changes_raw_id_seq; Type: ACL; Schema: human_resource; Owner: -
--

GRANT SELECT ON SEQUENCE human_resource.person_accounts_changes_raw_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE human_resource.person_accounts_changes_raw_id_seq TO read_write;


--
-- Name: TABLE person_greeting_message; Type: ACL; Schema: human_resource; Owner: -
--

GRANT SELECT ON TABLE human_resource.person_greeting_message TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE human_resource.person_greeting_message TO read_write;


--
-- Name: TABLE person_orgstructure_settings; Type: ACL; Schema: human_resource; Owner: -
--

GRANT SELECT ON TABLE human_resource.person_orgstructure_settings TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE human_resource.person_orgstructure_settings TO read_write;


--
-- Name: TABLE person_orgstructure_settings_duplicates; Type: ACL; Schema: human_resource; Owner: -
--

GRANT SELECT ON TABLE human_resource.person_orgstructure_settings_duplicates TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE human_resource.person_orgstructure_settings_duplicates TO read_write;


--
-- Name: TABLE person_orgstructure_settings_orgs; Type: ACL; Schema: human_resource; Owner: -
--

GRANT SELECT ON TABLE human_resource.person_orgstructure_settings_orgs TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE human_resource.person_orgstructure_settings_orgs TO read_write;


--
-- Name: TABLE persons; Type: ACL; Schema: human_resource; Owner: -
--

GRANT SELECT ON TABLE human_resource.persons TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE human_resource.persons TO read_write;


--
-- Name: SEQUENCE persons_id_seq; Type: ACL; Schema: human_resource; Owner: -
--

GRANT SELECT ON SEQUENCE human_resource.persons_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE human_resource.persons_id_seq TO read_write;


--
-- Name: TABLE work_info; Type: ACL; Schema: human_resource; Owner: -
--

GRANT SELECT ON TABLE human_resource.work_info TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE human_resource.work_info TO read_write;


--
-- Name: TABLE booking_orgs; Type: ACL; Schema: maps; Owner: -
--

GRANT SELECT ON TABLE maps.booking_orgs TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE maps.booking_orgs TO read_write;


--
-- Name: SEQUENCE booking_orgs_id_seq; Type: ACL; Schema: maps; Owner: -
--

GRANT SELECT ON SEQUENCE maps.booking_orgs_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE maps.booking_orgs_id_seq TO read_write;


--
-- Name: TABLE department_quotas; Type: ACL; Schema: maps; Owner: -
--

GRANT SELECT ON TABLE maps.department_quotas TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE maps.department_quotas TO read_write;


--
-- Name: SEQUENCE department_quotas_id_seq; Type: ACL; Schema: maps; Owner: -
--

GRANT SELECT ON SEQUENCE maps.department_quotas_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE maps.department_quotas_id_seq TO read_write;


--
-- Name: TABLE department_workplaces; Type: ACL; Schema: maps; Owner: -
--

GRANT SELECT ON TABLE maps.department_workplaces TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE maps.department_workplaces TO read_write;


--
-- Name: SEQUENCE department_workplaces_id_seq; Type: ACL; Schema: maps; Owner: -
--

GRANT SELECT ON SEQUENCE maps.department_workplaces_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE maps.department_workplaces_id_seq TO read_write;


--
-- Name: TABLE hierarchy; Type: ACL; Schema: maps; Owner: -
--

GRANT SELECT ON TABLE maps.hierarchy TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE maps.hierarchy TO read_write;


--
-- Name: SEQUENCE hierarchy_id_seq; Type: ACL; Schema: maps; Owner: -
--

GRANT SELECT ON SEQUENCE maps.hierarchy_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE maps.hierarchy_id_seq TO read_write;


--
-- Name: TABLE maps; Type: ACL; Schema: maps; Owner: -
--

GRANT SELECT ON TABLE maps.maps TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE maps.maps TO read_write;


--
-- Name: SEQUENCE maps_id_seq; Type: ACL; Schema: maps; Owner: -
--

GRANT SELECT ON SEQUENCE maps.maps_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE maps.maps_id_seq TO read_write;


--
-- Name: TABLE person_schedule_bookings; Type: ACL; Schema: maps; Owner: -
--

GRANT SELECT ON TABLE maps.person_schedule_bookings TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE maps.person_schedule_bookings TO read_write;


--
-- Name: SEQUENCE person_schedule_bookings_id_seq; Type: ACL; Schema: maps; Owner: -
--

GRANT SELECT ON SEQUENCE maps.person_schedule_bookings_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE maps.person_schedule_bookings_id_seq TO read_write;


--
-- Name: TABLE person_schedules; Type: ACL; Schema: maps; Owner: -
--

GRANT SELECT ON TABLE maps.person_schedules TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE maps.person_schedules TO read_write;


--
-- Name: TABLE user_workplaces; Type: ACL; Schema: maps; Owner: -
--

GRANT SELECT ON TABLE maps.user_workplaces TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE maps.user_workplaces TO read_write;


--
-- Name: SEQUENCE user_workplaces_id_seq; Type: ACL; Schema: maps; Owner: -
--

GRANT SELECT ON SEQUENCE maps.user_workplaces_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE maps.user_workplaces_id_seq TO read_write;


--
-- Name: TABLE workplace_events; Type: ACL; Schema: maps; Owner: -
--

GRANT SELECT ON TABLE maps.workplace_events TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE maps.workplace_events TO read_write;


--
-- Name: TABLE tree_toys; Type: ACL; Schema: new_year; Owner: -
--

GRANT SELECT ON TABLE new_year.tree_toys TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE new_year.tree_toys TO read_write;


--
-- Name: TABLE trees; Type: ACL; Schema: new_year; Owner: -
--

GRANT SELECT ON TABLE new_year.trees TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE new_year.trees TO read_write;


--
-- Name: TABLE achievements; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.achievements TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.achievements TO read_write;


--
-- Name: SEQUENCE achievements_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE public.achievements_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE public.achievements_id_seq TO read_write;


--
-- Name: TABLE achievements_owners; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.achievements_owners TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.achievements_owners TO read_write;


--
-- Name: SEQUENCE achievements_owners_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE public.achievements_owners_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE public.achievements_owners_id_seq TO read_write;


--
-- Name: TABLE assign_achievements; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.assign_achievements TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.assign_achievements TO read_write;


--
-- Name: TABLE cars; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.cars TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.cars TO read_write;


--
-- Name: SEQUENCE cars_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE public.cars_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE public.cars_id_seq TO read_write;


--
-- Name: TABLE change_events; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.change_events TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.change_events TO read_write;


--
-- Name: SEQUENCE change_events_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE public.change_events_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE public.change_events_id_seq TO read_write;


--
-- Name: TABLE change_log; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.change_log TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.change_log TO read_write;


--
-- Name: SEQUENCE change_log_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE public.change_log_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE public.change_log_id_seq TO read_write;


--
-- Name: TABLE company; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.company TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.company TO read_write;


--
-- Name: TABLE company_color; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.company_color TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.company_color TO read_write;


--
-- Name: TABLE contacts; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.contacts TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.contacts TO read_write;


--
-- Name: SEQUENCE contacts_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE public.contacts_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE public.contacts_id_seq TO read_write;


--
-- Name: TABLE countries; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.countries TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.countries TO read_write;


--
-- Name: SEQUENCE countries_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE public.countries_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE public.countries_id_seq TO read_write;


--
-- Name: TABLE file_changes; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.file_changes TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.file_changes TO read_write;


--
-- Name: SEQUENCE file_changes_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE public.file_changes_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE public.file_changes_id_seq TO read_write;


--
-- Name: TABLE goose_db_version; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.goose_db_version TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.goose_db_version TO read_write;


--
-- Name: SEQUENCE goose_db_version_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE public.goose_db_version_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE public.goose_db_version_id_seq TO read_write;


--
-- Name: TABLE goose_db_versions; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.goose_db_versions TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.goose_db_versions TO read_write;


--
-- Name: SEQUENCE goose_db_versions_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE public.goose_db_versions_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE public.goose_db_versions_id_seq TO read_write;


--
-- Name: TABLE hrbp_org_structures; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.hrbp_org_structures TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.hrbp_org_structures TO read_write;


--
-- Name: TABLE info; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.info TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.info TO read_write;


--
-- Name: TABLE jira_update_tasks; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.jira_update_tasks TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.jira_update_tasks TO read_write;


--
-- Name: SEQUENCE jira_backup_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE public.jira_backup_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE public.jira_backup_id_seq TO read_write;


--
-- Name: TABLE languages_assigned; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.languages_assigned TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.languages_assigned TO read_write;


--
-- Name: TABLE languages_list; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.languages_list TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.languages_list TO read_write;


--
-- Name: SEQUENCE languages_list_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE public.languages_list_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE public.languages_list_id_seq TO read_write;


--
-- Name: TABLE leader_statuses; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.leader_statuses TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.leader_statuses TO read_write;


--
-- Name: SEQUENCE leader_statuses_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE public.leader_statuses_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE public.leader_statuses_id_seq TO read_write;


--
-- Name: TABLE leader_statuses_owners; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.leader_statuses_owners TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.leader_statuses_owners TO read_write;


--
-- Name: SEQUENCE leader_statuses_owners_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE public.leader_statuses_owners_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE public.leader_statuses_owners_id_seq TO read_write;


--
-- Name: TABLE locations; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.locations TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.locations TO read_write;


--
-- Name: SEQUENCE locations_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE public.locations_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE public.locations_id_seq TO read_write;


--
-- Name: TABLE mail_tasks; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.mail_tasks TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.mail_tasks TO read_write;


--
-- Name: SEQUENCE mail_tasks_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE public.mail_tasks_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE public.mail_tasks_id_seq TO read_write;


--
-- Name: TABLE maps_events; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.maps_events TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.maps_events TO read_write;


--
-- Name: SEQUENCE maps_events_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE public.maps_events_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE public.maps_events_id_seq TO read_write;


--
-- Name: TABLE org_subscriptions; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.org_subscriptions TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.org_subscriptions TO read_write;


--
-- Name: TABLE pg_buffercache; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE public.pg_buffercache FROM postgres;
REVOKE SELECT ON TABLE public.pg_buffercache FROM pg_monitor;
GRANT ALL ON TABLE public.pg_buffercache TO "staff-portal-api-user";
GRANT SELECT ON TABLE public.pg_buffercache TO pg_monitor;
GRANT ALL ON TABLE public.pg_buffercache TO postgres;
GRANT SELECT ON TABLE public.pg_buffercache TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.pg_buffercache TO read_write;


--
-- Name: TABLE pg_funczon_show_fk_without_index; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE public.pg_funczon_show_fk_without_index FROM postgres;
REVOKE SELECT ON TABLE public.pg_funczon_show_fk_without_index FROM pg_monitor;
GRANT ALL ON TABLE public.pg_funczon_show_fk_without_index TO "staff-portal-api-user";
GRANT SELECT ON TABLE public.pg_funczon_show_fk_without_index TO pg_monitor;
GRANT ALL ON TABLE public.pg_funczon_show_fk_without_index TO postgres;
GRANT SELECT ON TABLE public.pg_funczon_show_fk_without_index TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.pg_funczon_show_fk_without_index TO read_write;


--
-- Name: TABLE pg_stat_statements; Type: ACL; Schema: public; Owner: -
--

REVOKE ALL ON TABLE public.pg_stat_statements FROM postgres;
REVOKE SELECT ON TABLE public.pg_stat_statements FROM PUBLIC;
GRANT ALL ON TABLE public.pg_stat_statements TO "staff-portal-api-user";
GRANT SELECT ON TABLE public.pg_stat_statements TO PUBLIC;
GRANT ALL ON TABLE public.pg_stat_statements TO postgres;
GRANT SELECT ON TABLE public.pg_stat_statements TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.pg_stat_statements TO read_write;


--
-- Name: TABLE phone_codes; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.phone_codes TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.phone_codes TO read_write;


--
-- Name: SEQUENCE phone_codes_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE public.phone_codes_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE public.phone_codes_id_seq TO read_write;


--
-- Name: TABLE phone_events; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.phone_events TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.phone_events TO read_write;


--
-- Name: TABLE photo_events; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.photo_events TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.photo_events TO read_write;


--
-- Name: TABLE portal_events; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.portal_events TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.portal_events TO read_write;


--
-- Name: SEQUENCE portal_events_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE public.portal_events_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE public.portal_events_id_seq TO read_write;


--
-- Name: TABLE position_family; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.position_family TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.position_family TO read_write;


--
-- Name: SEQUENCE position_family_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE public.position_family_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE public.position_family_id_seq TO read_write;


--
-- Name: TABLE position_level; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.position_level TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.position_level TO read_write;


--
-- Name: SEQUENCE position_level_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE public.position_level_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE public.position_level_id_seq TO read_write;


--
-- Name: TABLE position_level_type; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.position_level_type TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.position_level_type TO read_write;


--
-- Name: SEQUENCE position_level_type_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE public.position_level_type_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE public.position_level_type_id_seq TO read_write;


--
-- Name: TABLE remote; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.remote TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.remote TO read_write;


--
-- Name: TABLE search_user_filters; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.search_user_filters TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.search_user_filters TO read_write;


--
-- Name: SEQUENCE search_user_filters_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE public.search_user_filters_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE public.search_user_filters_id_seq TO read_write;


--
-- Name: TABLE skills; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.skills TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.skills TO read_write;


--
-- Name: SEQUENCE skills_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE public.skills_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE public.skills_id_seq TO read_write;


--
-- Name: TABLE stations; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.stations TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.stations TO read_write;


--
-- Name: SEQUENCE stations_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE public.stations_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE public.stations_id_seq TO read_write;


--
-- Name: TABLE user_deputy; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.user_deputy TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.user_deputy TO read_write;


--
-- Name: SEQUENCE user_deputy_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE public.user_deputy_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE public.user_deputy_id_seq TO read_write;


--
-- Name: TABLE user_skills; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.user_skills TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.user_skills TO read_write;


--
-- Name: TABLE user_stations; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.user_stations TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.user_stations TO read_write;


--
-- Name: SEQUENCE user_stations_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE public.user_stations_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE public.user_stations_id_seq TO read_write;


--
-- Name: TABLE "values"; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public."values" TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public."values" TO read_write;


--
-- Name: SEQUENCE values_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE public.values_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE public.values_id_seq TO read_write;


--
-- Name: TABLE welcome_mail_sent; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.welcome_mail_sent TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.welcome_mail_sent TO read_write;


--
-- Name: TABLE wifi_pass; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.wifi_pass TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.wifi_pass TO read_write;


--
-- Name: SEQUENCE wifi_pass_id_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE public.wifi_pass_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE public.wifi_pass_id_seq TO read_write;


--
-- Name: TABLE workplace_colors; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.workplace_colors TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.workplace_colors TO read_write;


--
-- Name: TABLE workplace_events; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.workplace_events TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.workplace_events TO read_write;


--
-- Name: TABLE workplaces; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON TABLE public.workplaces TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE public.workplaces TO read_write;


--
-- Name: SEQUENCE workplaces_pk_seq; Type: ACL; Schema: public; Owner: -
--

GRANT SELECT ON SEQUENCE public.workplaces_pk_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE public.workplaces_pk_seq TO read_write;


--
-- Name: TABLE schedule; Type: ACL; Schema: runner; Owner: -
--

GRANT SELECT ON TABLE runner.schedule TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE runner.schedule TO read_write;


--
-- Name: TABLE schedule_audit; Type: ACL; Schema: runner; Owner: -
--

GRANT SELECT ON TABLE runner.schedule_audit TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE runner.schedule_audit TO read_write;


--
-- Name: SEQUENCE schedule_id_seq; Type: ACL; Schema: runner; Owner: -
--

GRANT SELECT ON SEQUENCE runner.schedule_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE runner.schedule_id_seq TO read_write;


--
-- Name: TABLE task; Type: ACL; Schema: runner; Owner: -
--

GRANT SELECT ON TABLE runner.task TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE runner.task TO read_write;


--
-- Name: SEQUENCE task_id_seq; Type: ACL; Schema: runner; Owner: -
--

GRANT SELECT ON SEQUENCE runner.task_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE runner.task_id_seq TO read_write;


--
-- Name: TABLE photos; Type: ACL; Schema: valentine; Owner: -
--

GRANT SELECT ON TABLE valentine.photos TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE valentine.photos TO read_write;


--
-- Name: SEQUENCE photos_photo_id_seq; Type: ACL; Schema: valentine; Owner: -
--

GRANT SELECT ON SEQUENCE valentine.photos_photo_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE valentine.photos_photo_id_seq TO read_write;


--
-- Name: TABLE texts; Type: ACL; Schema: valentine; Owner: -
--

GRANT SELECT ON TABLE valentine.texts TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE valentine.texts TO read_write;


--
-- Name: SEQUENCE texts_text_id_seq; Type: ACL; Schema: valentine; Owner: -
--

GRANT SELECT ON SEQUENCE valentine.texts_text_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE valentine.texts_text_id_seq TO read_write;


--
-- Name: TABLE valentines; Type: ACL; Schema: valentine; Owner: -
--

GRANT SELECT ON TABLE valentine.valentines TO read_only;
GRANT SELECT,INSERT,DELETE,TRUNCATE,UPDATE ON TABLE valentine.valentines TO read_write;


--
-- Name: SEQUENCE valentines_valentine_id_seq; Type: ACL; Schema: valentine; Owner: -
--

GRANT SELECT ON SEQUENCE valentine.valentines_valentine_id_seq TO read_only;
GRANT SELECT,USAGE ON SEQUENCE valentine.valentines_valentine_id_seq TO read_write;


--
-- Name: disallow_grant_event_ddl; Type: EVENT TRIGGER; Schema: -; Owner: -
--

CREATE EVENT TRIGGER disallow_grant_event_ddl ON ddl_command_start
   EXECUTE FUNCTION public.disallow_event_ddl_grant();


--
-- PostgreSQL database dump complete
--

